{
  "version": 3,
  "sources": ["../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_injector.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_indexeddb.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_item_cart.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_data.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_item_selector.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_order_summary.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_payment.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_customer.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_session.js", "../../../../../apps/whrt_whitelabel/whrt_whitelabel/whrt_whitelabel/page/whrt_pos/whrt_pos_controller.js"],
  "sourcesContent": ["// whrt_pos_injector.js\r\nexport function injectDependencies() {\r\n  // CSS/JS dependencies injection\r\n  if (!$('link[href=\"https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/css/adminlte.min.css\"]').length) {\r\n    $('head').append('<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/css/adminlte.min.css\">');\r\n  }\r\n  if (!$('script[src=\"https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/js/adminlte.min.js\"]').length) {\r\n    $('head').append('<script src=\"https://cdn.jsdelivr.net/npm/admin-lte@3.2/dist/js/adminlte.min.js\"></script>');\r\n  }\r\n  if (!$('link[href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"]').length) {\r\n    $('head').append('<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">');\r\n  }\r\n  if (!$('script[src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-format/1.0/jquery.format.min.js\"]').length) {\r\n    $('head').append('<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-format/1.0/jquery.format.min.js\"></script>');\r\n  }\r\n  if (!$('script[src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"]').length) {\r\n    $('head').append('<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>');\r\n  }\r\n  if (!$('script[src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"]').length) {\r\n    $('head').append('<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>');\r\n  }\r\n  if (!$('link[href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@500;700&display=swap\"]').length) {\r\n    $('head').append('<link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@500;700&display=swap\" rel=\"stylesheet\">');\r\n  }\r\n  if (!$('link[href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\"]').length) {\r\n    $('head').append('<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">');\r\n  }\r\n  \r\n  // Custom CSS injection\r\n  if (!$('style#custom-pos-style').length) {\r\n    $('head').append(`\r\n      <style id=\"custom-pos-style\">\r\n        /* Global Reset & Fonts */\r\n        body, html {\r\n          font-family: 'Roboto', sans-serif;\r\n          background-color: #f7f9fc;\r\n        }\r\n        .wrapper { background-color: #f7f9fc; }\r\n        /* Navbar styling */\r\n        .main-header.navbar {\r\n          background: linear-gradient(135deg, #0a2342, #013a70);\r\n          border-bottom: none;\r\n          padding: 0.5rem 1rem;\r\n        }\r\n        .main-header .nav-link, .main-header .navbar-brand {\r\n          color: #ffffff !important;\r\n        }\r\n        .navbar-center {\r\n          position: absolute;\r\n          left: 50%;\r\n          top: 50%;\r\n          transform: translate(-50%, -50%);\r\n          font-family: 'Montserrat', sans-serif;\r\n        }\r\n        .navbar-center h3 {\r\n          margin: 0;\r\n          font-weight: 500;\r\n          font-size: 1.75rem;\r\n          color: #ffffff;\r\n        }\r\n        /* Sidebar Toggle styling */\r\n        .main-header .nav-link[data-widget=\"pushmenu\"] {\r\n          color: #ffffff !important;\r\n          font-size: 1.5rem;\r\n          background-color: transparent;\r\n          padding: 0.2rem;\r\n          margin-top: 5px;\r\n        }\r\n        .navbar-nav.ml-auto li { margin-left: 0.75rem; }\r\n        /* Sidebar styling */\r\n        .main-sidebar {\r\n          background-color: #0a2342;\r\n          box-shadow: 2px 0 8px rgba(0,0,0,0.2);\r\n\t\t  \r\n        }\r\n        .main-sidebar .brand-link {\r\n          background-color: #0a2342;\r\n          border-bottom: 1px solid #013a70;\r\n          font-size: 1.2rem;\r\n          font-weight: 500;\r\n          text-align: center;\r\n        }\r\n        .main-sidebar .nav-sidebar .nav-link {\r\n          color: #cfd8dc;\r\n          padding: 0.75rem 1rem;\r\n          margin: 0.25rem 0;\r\n          border-radius: 4px;\r\n          transition: background-color 0.2s, color 0.2s;\r\n        }\r\n        .main-sidebar .nav-sidebar .nav-link:hover, \r\n        .main-sidebar .nav-sidebar .nav-link.active {\r\n          background-color: #013a70;\r\n          color: #ffffff;\r\n        }\r\n\t\t.sidebar {\r\n  max-height: 100vh; /* Limit height to viewport */\r\n  overflow-y: auto;  /* Enable vertical scrolling */\r\n}\r\n\r\n\r\n        /* Card and Product Grid styling */\r\n        .card {\r\n          border: none;\r\n          border-radius: 8px;\r\n          background-color: #ffffff;\r\n          box-shadow: 0 4px 8px rgba(0,0,0,0.05);\r\n          margin-bottom: 1rem;\r\n        }\r\n        .card-header {\r\n          background-color: transparent;\r\n          border-bottom: none;\r\n        }\r\n        .card-body { background-color: #ffffff; }\r\n\t\t.product-search-bar {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.product-search-input {\r\n  width: 50%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n}\r\n\r\n        .product-grid {\t\t  \r\n\t\t  display: grid;\r\n\t\t  grid-template-columns: repeat(4, 1fr);\r\n\t\t  gap: 1rem;   \r\n          background-color: #e8eff7;\r\n          padding: 1rem;\r\n          border-radius: 8px;\r\n\t\t  height: 700px;       /* Set a fixed height for scrolling */\r\n\t\t  overflow-y: auto;    /* Enables vertical scrolling when needed */\r\n        }\r\n        .product-item {\r\n  position: relative; /* Ensure absolute-positioned children (like the badge) can be placed correctly */\r\n  width: 100%;\r\n  height: 250px;\r\n  overflow: hidden;\r\n  background-color: #ffffff;\r\n  border: 1px solid #d1e3f0;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.stock-badge {\r\n  position: absolute;\r\n  top: 8px;    /* Adjust as needed */\r\n  right: 8px;  /* Adjust as needed */\r\n  z-index: 5;  /* Ensure it stays on top of the image */\r\n  font-size: 0.8rem; \r\n  padding: 5px 8px;\r\n  border-radius: 12px;\r\n  color: #fff;\r\n}\r\n\r\n        .product-item:hover { transform: translateY(-5px); }\r\n        .product-item .card-img-top {\r\n          object-fit: cover;\r\n          height: 60%;\r\n          width: 100%;\r\n        }\r\n        .product-item .product-info {\r\n          padding: 0.75rem;\r\n        }\r\n        .product-item .product-name {\r\n          font-size: 1rem;\r\n          font-weight: 500;\r\n          color: #013a70;\r\n        }\r\n        /* Price tag: positioned near the bottom with minimal gap */\r\n        .product-item .product-price {\r\n          position: absolute;          \r\n          right: 0.5rem;\r\n          font-size: 1rem;\r\n          font-weight: bold;\r\n          color: darkorange;\r\n        }\r\n\t\t\r\n        /* Item Cart heading style */\r\n        .card-header h4 {\r\n          font-family: 'Montserrat', sans-serif;\r\n          font-weight: 600;\r\n        }\r\n        /* Cart item styles */\r\n        .cart-item {\r\n          font-family: 'Roboto', sans-serif;\r\n        }\r\n        .cart-item .cart-item-name { font-size: 0.9rem; font-weight: 500; }\r\n        .cart-item .cart-item-qty { \r\n          font-size: 0.85rem; \r\n          display: flex; \r\n          align-items: center; \r\n        }\r\n        .cart-item .cart-item-qty button { \r\n          padding: 0.05rem 0.1rem; \r\n          font-size: 0.6rem; \r\n          margin: 0 0.2rem; \r\n        }\r\n        .cart-item-divider { \r\n          margin: 0.5rem 0; \r\n          border-top: 1px solid #e0e0e0; \r\n        }\r\n        /* Button styles */\r\n        .btn-home {\r\n          background-color: #f0ad4e;\r\n          border-color: #f0ad4e;\r\n          color: #ffffff;\r\n        }\r\n        .btn-home:hover {\r\n          background-color: #ec971f;\r\n          border-color: #d58512;\r\n        }\r\n        /* Modal / Payment Block styling */\r\n        .modal-header, .modal-footer {\r\n          background-color: #013a70;\r\n          color: #ffffff;\r\n        }\r\n        .modal-content { \r\n          border-radius: 8px; \r\n          border: none;\r\n        }\r\n        .modal-body {\r\n          background-color: #e8eff7;\r\n          padding: 1.5rem;\r\n        }\r\n        .numpad .btn {\r\n          width: 60px;\r\n          height: 60px;\r\n          font-size: 1.2rem;\r\n          margin: 0.3rem;\r\n        }\r\n        /* Customer dropdown styling */\r\n        .customer-dropdown {\r\n          border-radius: 4px;\r\n        }\r\n      </style>\r\n    `);\r\n  }\r\n}\r\n", "// whrt_pos_indexeddb.js\r\nexport let db = null;\r\n\r\nexport async function initIDB() {\r\n  return new Promise((resolve, reject) => {\r\n    let request = indexedDB.open(\"whrt_pos_db\", 1);\r\n    request.onupgradeneeded = function (event) {\r\n      db = event.target.result;\r\n      if (!db.objectStoreNames.contains(\"storage\")) {\r\n        db.createObjectStore(\"storage\", { keyPath: \"key\" });\r\n      }\r\n    };\r\n    request.onsuccess = function (event) {\r\n      db = event.target.result;\r\n      resolve();\r\n    };\r\n    request.onerror = function (event) {\r\n      console.error(\"IndexedDB error:\", event.target.errorCode);\r\n      reject(event.target.errorCode);\r\n    };\r\n  });\r\n}\r\n\r\nexport async function getStorage(key) {\r\n  return new Promise((resolve, reject) => {\r\n    let transaction = db.transaction([\"storage\"], \"readonly\");\r\n    let store = transaction.objectStore(\"storage\");\r\n    let request = store.get(key);\r\n    request.onsuccess = function () {\r\n      resolve(request.result ? request.result.value : null);\r\n    };\r\n    request.onerror = function () {\r\n      reject(request.error);\r\n    };\r\n  });\r\n}\r\n\r\nexport async function setStorage(key, value) {\r\n  return new Promise((resolve, reject) => {\r\n    let transaction = db.transaction([\"storage\"], \"readwrite\");\r\n    let store = transaction.objectStore(\"storage\");\r\n    let request = store.put({ key: key, value: value });\r\n    request.onsuccess = function () { resolve(); };\r\n    request.onerror = function () { reject(request.error); };\r\n  });\r\n}\r\n\r\nexport async function removeStorage(key) {\r\n  return new Promise((resolve, reject) => {\r\n    let transaction = db.transaction([\"storage\"], \"readwrite\");\r\n    let store = transaction.objectStore(\"storage\");\r\n    let request = store.delete(key);\r\n    request.onsuccess = function () { resolve(); };\r\n    request.onerror = function () { reject(request.error); };\r\n  });\r\n}\r\n\r\nexport async function clearStorage() {\r\n  return new Promise((resolve, reject) => {\r\n    let transaction = db.transaction([\"storage\"], \"readwrite\");\r\n    let store = transaction.objectStore(\"storage\");\r\n    let request = store.clear();\r\n    request.onsuccess = function () { resolve(); };\r\n    request.onerror = function () { reject(request.error); };\r\n  });\r\n}\r\n", "import { getStorage, setStorage } from './whrt_pos_indexeddb.js';\r\n\r\nexport let cart = [];\r\nexport let totalQuantity = 0;\r\n\r\n// ----------------------------\r\n// Client-Side Tax Calculation\r\n// ----------------------------\r\nfunction calculateClientSideTaxes(cart, tax_rules) {\r\n    let net_total = 0;\r\n    cart.forEach(item => {\r\n      net_total += item.quantity * item.valuation_rate;\r\n    });\r\n    let taxes = [];\r\n    let total_taxes_and_charges = 0;\r\n    tax_rules.forEach(rule => {\r\n      let rate = rule.tax_rate || rule.rate || 0;\r\n      let tax_amount = net_total * (rate / 100);\r\n      taxes.push({\r\n        description: rule.description || rule.account_head || \"Tax\",\r\n        account_head: rule.account_head,\r\n        type: rule.type,\r\n        tax_amount: tax_amount\r\n      });\r\n      total_taxes_and_charges += tax_amount;\r\n    });\r\n    let grand_total = net_total + total_taxes_and_charges;\r\n    return { net_total, total_taxes_and_charges, grand_total, taxes };\r\n}\r\n  \r\n// ----------------------------\r\n// Load Cart from Storage\r\n// ----------------------------\r\nexport async function loadCartFromStorage() {\r\n  const savedCart = await getStorage('cart');\r\n  if (savedCart) {\r\n    cart = JSON.parse(savedCart);\r\n    await updateCart();\r\n  }\r\n}\r\n  \r\n// ----------------------------\r\n// Add to Cart Functionality\r\n// ----------------------------\r\nexport async function addToCart(product, selected_customer) {\r\n  if (!selected_customer) {\r\n    frappe.msgprint(\"Please select a customer before adding items to the cart.\");\r\n    return;\r\n  }\r\n  const existingItem = cart.find(item => item.name === product.name);\r\n  if (existingItem) { \r\n    existingItem.quantity += 1; \r\n  } else { \r\n    product.quantity = 1; \r\n    cart.push(product); \r\n  }\r\n  await updateCart();\r\n}\r\n  \r\n// ----------------------------\r\n// Update Cart Functionality\r\n// ----------------------------\r\nexport async function updateCart() {\r\n    const cartItems = $('.cart-items');\r\n    cartItems.empty();\r\n    totalQuantity = 0;\r\n    let netTotal = 0;\r\n    cart.forEach(item => {\r\n      totalQuantity += item.quantity;\r\n      netTotal += item.quantity * item.valuation_rate;\r\n      const cartItem = createCartItem(item);\r\n      cartItems.append(cartItem);\r\n    });\r\n    $('.cart-quantity').text(totalQuantity);\r\n    $('.net-total').text(netTotal.toFixed(2));\r\n    $('.tax-lines').empty();\r\n    // Set a default numeric value for grand total so the payment modal can parse it.\r\n    $('.grand-total').text(netTotal.toFixed(2));\r\n    await setStorage('cart', JSON.stringify(cart));\r\n  \r\n    let company = await getStorage(\"selected_company\");\r\n    let pos_profile_taxation = await getStorage(\"pos_profile_taxation\");\r\n    let customer_for_taxes = window.selected_customer || \"Walk-in Customer\";\r\n  \r\n    if (navigator.onLine && company && pos_profile_taxation && cart.length > 0) {\r\n      frappe.call({\r\n        method: 'whrt_whitelabel.api.calculate_taxes_for_pos_invoice',\r\n        args: {\r\n          cart: JSON.stringify(cart),\r\n          company: company,\r\n          customer: customer_for_taxes,\r\n          taxes_and_charges: pos_profile_taxation\r\n        },\r\n        callback: function(r) {\r\n          if (r && r.message) {\r\n            $('.net-total').text(r.message.net_total.toFixed(2));\r\n            r.message.taxes.forEach(tax_line => {\r\n              $('.tax-lines').append(`<div class=\"tax-line\"><span>${tax_line.description}</span><span>\u20B9${(tax_line.tax_amount || 0).toFixed(2)}</span></div>`);\r\n            });\r\n            $('.grand-total').text(r.message.grand_total.toFixed(2));\r\n          }\r\n        }\r\n      });\r\n    } else if (!navigator.onLine && pos_profile_taxation && cart.length > 0) {\r\n      let taxData = {};\r\n      try {\r\n        taxData = JSON.parse(pos_profile_taxation);\r\n      } catch (e) {\r\n        taxData = { rules: [] };\r\n      }\r\n      let tax_rules = taxData.rules || [];\r\n      let taxResult = calculateClientSideTaxes(cart, tax_rules);\r\n      $('.net-total').text(taxResult.net_total.toFixed(2));\r\n      taxResult.taxes.forEach(tax_line => {\r\n        $('.tax-lines').append(`<div class=\"tax-line\"><span>${tax_line.description}</span><span>\u20B9${(tax_line.tax_amount || 0).toFixed(2)}</span></div>`);\r\n      });\r\n      $('.grand-total').text(taxResult.grand_total.toFixed(2));\r\n    }\r\n}\r\n  \r\n// ----------------------------\r\n// Helper to Create a Cart Item Element\r\n// ----------------------------\r\nfunction createCartItem(item) {\r\n  const cartItem = $(`\r\n    <div class=\"cart-item d-flex align-items-center mb-2\">\r\n      <img src=\"${item.image}\" alt=\"${item.name}\" class=\"img-thumbnail mr-2\" style=\"width:50px;\">\r\n      <div class=\"flex-grow-1\">\r\n        <div class=\"cart-item-name\">${item.name}</div>\r\n        <div class=\"cart-item-qty\">\r\n          <button class=\"btn btn-sm btn-outline-secondary decrease-quantity\">\u2013</button>\r\n          <span>${item.quantity}</span>\r\n          <button class=\"btn btn-sm btn-outline-secondary increase-quantity\">+</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"cart-item-total ml-2\">\u20B9${(item.quantity * item.valuation_rate).toFixed(2)}</div>\r\n      <button class=\"btn btn-sm btn-danger remove-item ml-2\">\u00D7</button>\r\n    </div>\r\n  `);\r\n  cartItem.find('.increase-quantity').on('click', async function () {\r\n    item.quantity += 1;\r\n    await updateCart();\r\n  });\r\n  cartItem.find('.decrease-quantity').on('click', async function () {\r\n    if (item.quantity > 1) { \r\n      item.quantity -= 1; \r\n      await updateCart(); \r\n    }\r\n  });\r\n  cartItem.find('.remove-item').on('click', async function () {\r\n    cart = cart.filter(cartItem => cartItem.name !== item.name);\r\n    await updateCart();\r\n  });\r\n  return cartItem;\r\n}\r\n", "// whrt_pos_data.js\r\nimport { setStorage, getStorage } from './whrt_pos_indexeddb.js';\r\nimport { updateCart } from './whrt_pos_item_cart.js';\r\n\r\nexport async function fetchAllItems() {\r\n  const limit = 1000;\r\n  let allItems = [];\r\n  let start = 0;\r\n  while (true) {\r\n    let response = await frappe.call({\r\n      method: \"frappe.client.get_list\",\r\n      args: {\r\n        doctype: \"Item\",\r\n        fields: [\"name\", \"item_name\", \"item_group\", \"image\", \"valuation_rate\", \"modified\"],\r\n        limit_page_length: limit,\r\n        limit_start: start\r\n      }\r\n    });\r\n    if (response.message && response.message.length > 0) {\r\n      allItems = allItems.concat(response.message);\r\n      frappe.msgprint(`Fetched ${allItems.length} items so far...`);\r\n      if (response.message.length < limit) break;\r\n      start += limit;\r\n    } else {\r\n      break;\r\n    }\r\n  }\r\n  return allItems;\r\n}\r\n\r\nexport async function fetchAndStoreDoctypeData() {\r\n  try {\r\n    frappe.msgprint(\"Fetching all Items. Please wait...\");\r\n    const items = await fetchAllItems();\r\n    frappe.msgprint(`Total items fetched: ${items.length}`);\r\n    await setStorage(\"items\", JSON.stringify(items));\r\n    // Save current timestamp\r\n    await setStorage(\"items_last_fetched\", new Date().toISOString());\r\n    frappe.msgprint(\"All items stored in IndexedDB.\");\r\n  } catch (error) {\r\n    console.error(\"Error fetching items:\", error);\r\n  }\r\n  \r\n  // Fetch Item Groups\r\n  frappe.call({\r\n    method: \"frappe.client.get_list\",\r\n    args: {\r\n      doctype: \"Item Group\",\r\n      fields: [\"name\", \"item_group_name\", \"modified\"],\r\n      limit_page_length: 1000\r\n    },\r\n    callback: async function(response) {\r\n      if (response.message) {\r\n        await setStorage(\"item_groups\", JSON.stringify(response.message));\r\n        await setStorage(\"item_groups_last_fetched\", new Date().toISOString());\r\n        frappe.msgprint(`Item Groups stored: ${response.message.length}`);\r\n      }\r\n    }\r\n  });\r\n  \r\n  // Fetch Customers\r\n  frappe.call({\r\n    method: \"frappe.client.get_list\",\r\n    args: {\r\n      doctype: \"Customer\",\r\n      fields: [\"name\", \"customer_name\", \"mobile_no\", \"modified\"],\r\n      limit_page_length: 1000\r\n    },\r\n    callback: async function(response) {\r\n      if (response.message) {\r\n        await setStorage(\"customers\", JSON.stringify(response.message));\r\n        await setStorage(\"customers_last_fetched\", new Date().toISOString());\r\n        frappe.msgprint(`Customers stored: ${response.message.length}`);\r\n      }\r\n    }\r\n  });\r\n  \r\n  // Fetch Stock Data\r\n  fetchStockData();\r\n  // Optionally, fetch taxation details here and store them similarly\r\n}\r\n\r\nexport async function updateItemsIfNeeded() {\r\n  let localItemsStr = await getStorage(\"items\");\r\n  let localItems = localItemsStr ? JSON.parse(localItemsStr) : [];\r\n  let lastFetched = await getStorage(\"items_last_fetched\");\r\n  \r\n  let filters = lastFetched ? { modified: [\">\", lastFetched] } : {};\r\n  let response = await frappe.call({\r\n    method: \"frappe.client.get_list\",\r\n    args: {\r\n      doctype: \"Item\",\r\n      fields: [\"name\", \"item_name\", \"item_group\", \"image\", \"valuation_rate\", \"modified\"],\r\n      filters: filters,\r\n      limit_page_length: 1000\r\n    }\r\n  });\r\n  \r\n  if (response.message && response.message.length > 0) {\r\n    response.message.forEach(newItem => {\r\n      let index = localItems.findIndex(item => item.name === newItem.name);\r\n      if (index > -1) {\r\n        localItems[index] = newItem;\r\n      } else {\r\n        localItems.push(newItem);\r\n      }\r\n    });\r\n    await setStorage(\"items\", JSON.stringify(localItems));\r\n    await setStorage(\"items_last_fetched\", new Date().toISOString());\r\n    frappe.msgprint(`Items updated: ${response.message.length} changes.`);\r\n  }\r\n}\r\n\r\nexport async function updateItemGroupsIfNeeded() {\r\n  let localGroupsStr = await getStorage(\"item_groups\");\r\n  let localGroups = localGroupsStr ? JSON.parse(localGroupsStr) : [];\r\n  let lastFetched = await getStorage(\"item_groups_last_fetched\");\r\n  \r\n  let filters = lastFetched ? { modified: [\">\", lastFetched] } : {};\r\n  frappe.call({\r\n    method: \"frappe.client.get_list\",\r\n    args: {\r\n      doctype: \"Item Group\",\r\n      fields: [\"name\", \"item_group_name\", \"modified\"],\r\n      filters: filters,\r\n      limit_page_length: 1000\r\n    },\r\n    callback: async function(response) {\r\n      if (response.message && response.message.length > 0) {\r\n        response.message.forEach(newGroup => {\r\n          let index = localGroups.findIndex(group => group.name === newGroup.name);\r\n          if (index > -1) {\r\n            localGroups[index] = newGroup;\r\n          } else {\r\n            localGroups.push(newGroup);\r\n          }\r\n        });\r\n        await setStorage(\"item_groups\", JSON.stringify(localGroups));\r\n        await setStorage(\"item_groups_last_fetched\", new Date().toISOString());\r\n        frappe.msgprint(`Item Groups updated: ${response.message.length} changes.`);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport async function updateCustomersIfNeeded() {\r\n  let localCustomersStr = await getStorage(\"customers\");\r\n  let localCustomers = localCustomersStr ? JSON.parse(localCustomersStr) : [];\r\n  let lastFetched = await getStorage(\"customers_last_fetched\");\r\n  \r\n  let filters = lastFetched ? { modified: [\">\", lastFetched] } : {};\r\n  frappe.call({\r\n    method: \"frappe.client.get_list\",\r\n    args: {\r\n      doctype: \"Customer\",\r\n      fields: [\"name\", \"customer_name\", \"mobile_no\", \"modified\"],\r\n      filters: filters,\r\n      limit_page_length: 1000\r\n    },\r\n    callback: async function(response) {\r\n      if (response.message && response.message.length > 0) {\r\n        response.message.forEach(newCustomer => {\r\n          let index = localCustomers.findIndex(cust => cust.name === newCustomer.name);\r\n          if (index > -1) {\r\n            localCustomers[index] = newCustomer;\r\n          } else {\r\n            localCustomers.push(newCustomer);\r\n          }\r\n        });\r\n        await setStorage(\"customers\", JSON.stringify(localCustomers));\r\n        await setStorage(\"customers_last_fetched\", new Date().toISOString());\r\n        frappe.msgprint(`Customers updated: ${response.message.length} changes.`);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport async function fetchStockData() {\r\n  let warehouse = await getStorage(\"pos_profile_warehouse\");\r\n  if (!warehouse) { warehouse = \"Main Warehouse\"; }\r\n  frappe.call({\r\n    method: \"whrt_whitelabel.api.get_accurate_stock\",\r\n    args: { warehouse: warehouse },\r\n    callback: async function(response) {\r\n      if (response.message) {\r\n        let stock_mapping = response.message;\r\n        await setStorage(\"stock_mapping\", JSON.stringify(stock_mapping));\r\n        await setStorage(\"stock_last_fetched\", new Date().toISOString());\r\n        frappe.msgprint(\"Accurate stock data stored in IndexedDB!\");\r\n        updateCart();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport async function updateStockData() {\r\n  // For example, re-fetch stock data based on the last update time.\r\n  await fetchStockData();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*---------------------------------------------------------\r\n  Image Storage Functions with Progress Modal\r\n---------------------------------------------------------*/\r\n\r\nfunction openImageDB() {\r\n  return new Promise((resolve, reject) => {\r\n    const request = indexedDB.open(\"itemImagesDB\", 1);\r\n    request.onupgradeneeded = (event) => {\r\n      const db = event.target.result;\r\n      if (!db.objectStoreNames.contains(\"images\")) {\r\n        db.createObjectStore(\"images\", { keyPath: \"id\" });\r\n      }\r\n    };\r\n    request.onsuccess = () => resolve(request.result);\r\n    request.onerror = () => reject(request.error);\r\n  });\r\n}\r\n\r\nexport async function storeImageOffline(itemId, imageUrl) {\r\n  try {\r\n    // Construct the proxy API URL\r\n    const encodedUrl = encodeURIComponent(imageUrl);\r\n    const proxyUrl = `${window.location.origin}/api/method/whrt_whitelabel.api.proxy_image?url=${encodedUrl}`;\r\n    \r\n    const response = await fetch(proxyUrl);\r\n    const blob = await response.blob();\r\n\tconsole.log(\"Blob type:\", blob.type); // should be 'image/jpeg' or similar\r\n    const db = await openImageDB();\r\n    const transaction = db.transaction(\"images\", \"readwrite\");\r\n    const store = transaction.objectStore(\"images\");\r\n    store.put({ id: itemId, image: blob });\r\n    console.log(`Image stored for Item ID: ${itemId}`);\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch and store image:\", error);\r\n    // Rethrow if you want the online branch to catch this error.\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport async function getImageOffline(itemId) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const db = await openImageDB();\r\n      const transaction = db.transaction(\"images\", \"readonly\");\r\n      const store = transaction.objectStore(\"images\");\r\n      const request = store.get(itemId);\r\n      request.onsuccess = () => {\r\n        if (request.result) {\r\n          resolve(URL.createObjectURL(request.result.image));\r\n        } else {\r\n          resolve(null);\r\n        }\r\n      };\r\n      request.onerror = () => {\r\n        reject(request.error);\r\n      };\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\n/*---------------------------------------------------------\r\n  Function to Store All Item Images Offline via Button Only\r\n---------------------------------------------------------*/\r\nexport async function storeAllImagesOffline() {\r\n  if (localStorage.getItem(\"images_loaded_flag\") === \"true\") {\r\n    console.log(\"Images already loaded offline.\");\r\n    return;\r\n  }\r\n\r\n  const itemsStr = await getStorage(\"items\");\r\n  if (!itemsStr) {\r\n    console.warn(\"No items found to store images offline.\");\r\n    return;\r\n  }\r\n  const items = JSON.parse(itemsStr);\r\n  const total = items.length;\r\n  let count = 0;\r\n\r\n  $(\"#image-progress-modal\").modal(\"show\");\r\n  $(\"#progress-bar\").css(\"width\", \"0%\").attr(\"aria-valuenow\", 0);\r\n\r\n  const concurrencyLimit = 500; // Process 1000 images concurrently\r\n\r\n  for (let i = 0; i < total; i += concurrencyLimit) {\r\n    const batch = items.slice(i, i + concurrencyLimit);\r\n    await Promise.all(batch.map(async (item) => {\r\n      await storeImageOffline(item.name, item.image);\r\n      count++;\r\n      const progress = Math.round((count / total) * 100);\r\n      $(\"#progress-bar\").css(\"width\", `${progress}%`).attr(\"aria-valuenow\", progress);\r\n    }));\r\n  }\r\n\r\n  $(\"#image-progress-modal\").modal(\"hide\");\r\n  console.log(\"All item images have been stored offline.\");\r\n  localStorage.setItem(\"images_loaded_flag\", \"true\");\r\n}\r\n\r\n\r\n/*---------------------------------------------------------\r\n  Other Offline Functions (Invoices, Stock, etc.)\r\n---------------------------------------------------------*/\r\n\r\nexport async function storeOfflineInvoice(invoicePayload) {\r\n  let offlineInvoices = await getStorage(\"offline_invoices\");\r\n  if (offlineInvoices) {\r\n    try {\r\n      offlineInvoices = JSON.parse(offlineInvoices);\r\n    } catch (e) {\r\n      offlineInvoices = [];\r\n    }\r\n  } else {\r\n    offlineInvoices = [];\r\n  }\r\n  offlineInvoices.push(invoicePayload);\r\n  await setStorage(\"offline_invoices\", JSON.stringify(offlineInvoices));\r\n}\r\n\r\nexport async function offlineReduceStock(cart) {\r\n  let stockData = await getStorage(\"stock_mapping\");\r\n  if (stockData) {\r\n    try {\r\n      stockData = JSON.parse(stockData);\r\n    } catch (e) {\r\n      stockData = {};\r\n    }\r\n  } else {\r\n    stockData = {};\r\n  }\r\n  cart.forEach(item => {\r\n    if (stockData[item.name] !== undefined) {\r\n      stockData[item.name] -= item.quantity;\r\n      if (stockData[item.name] < 0) {\r\n        stockData[item.name] = 0;\r\n      }\r\n    }\r\n  });\r\n  await setStorage(\"stock_mapping\", JSON.stringify(stockData));\r\n  updateCart();\r\n}\r\n\r\nexport async function syncOfflineInvoices() {\r\n  if (!navigator.onLine) return;\r\n  let offlineInvoices = await getStorage(\"offline_invoices\");\r\n  if (!offlineInvoices) return;\r\n  try {\r\n    offlineInvoices = JSON.parse(offlineInvoices);\r\n  } catch (e) {\r\n    console.error(\"Error parsing offline invoices\", e);\r\n    return;\r\n  }\r\n  for (let i = 0; i < offlineInvoices.length; i++) {\r\n    let invoicePayload = offlineInvoices[i];\r\n    await frappe.call({\r\n      method: 'whrt_whitelabel.api.create_invoice',\r\n      args: invoicePayload,\r\n      callback: function (invoice_response) {\r\n        if (invoice_response.message && invoice_response.message.invoice_id) {\r\n          frappe.msgprint(\"Offline invoice synced: \" + invoice_response.message.invoice_id);\r\n          offlineInvoices.splice(i, 1);\r\n          i--;\r\n        } else {\r\n          frappe.msgprint(\"Failed to sync an offline invoice: \" + (invoice_response.error || \"\"));\r\n        }\r\n      },\r\n      error: function (err) {\r\n        frappe.msgprint(\"Server error while syncing offline invoice.\");\r\n        console.error(\"Sync error\", err);\r\n      }\r\n    });\r\n  }\r\n  await setStorage(\"offline_invoices\", JSON.stringify(offlineInvoices));\r\n}\r\n", "// whrt_pos_item_selector.js\r\nimport { getStorage } from './whrt_pos_indexeddb.js';\r\nimport { storeImageOffline, getImageOffline } from './whrt_pos_data.js';\r\n\r\nconst itemsPerPage = 24;\r\nlet currentFilteredItems = [];\r\nlet currentCategory = \"\";\r\nlet currentPage = 1;\r\nconst formatter = new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR' });\r\n\r\nexport async function loadCategories() {\r\n  frappe.call({\r\n    method: 'frappe.client.get_list',\r\n    args: { doctype: 'Item Group', fields: ['name', 'item_group_name'], limit_page_length: 1000 },\r\n    callback: function (response) {\r\n      const categoryList = $('#category-list');\r\n      response.message.forEach(cat => {\r\n        const displayName = cat.item_group_name || cat.name;\r\n        categoryList.append(`<li class=\"nav-item\"><a href=\"#\" class=\"nav-link category\" data-category=\"${displayName}\">${displayName}</a></li>`);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport async function loadProductsByCategory(category_name) {\r\n  let data = await getStorage(\"items\");\r\n  if (!data) {\r\n    frappe.msgprint(\"No offline items found. Please go online and fetch data first.\");\r\n    return;\r\n  }\r\n  let allItems = JSON.parse(data);\r\n  currentFilteredItems = allItems.filter(it => it.item_group === category_name);\r\n  currentCategory = category_name;\r\n  currentPage = 1;\r\n  renderPage();\r\n}\r\n\r\nasync function renderPage(filteredItems = currentFilteredItems) {\r\n  let start = (currentPage - 1) * itemsPerPage;\r\n  let end = start + itemsPerPage;\r\n  let pageItems = filteredItems.slice(start, end);\r\n  await populateProductGrid(pageItems);\r\n  addPaginationControls(Math.ceil(filteredItems.length / itemsPerPage));\r\n}\r\n\r\nfunction addPaginationControls(totalPages) {\r\n  $('.pagination-controls').remove();\r\n  if (totalPages <= 1) return;\r\n  const pagination = $('<div class=\"pagination-controls d-flex justify-content-center mt-3\"></div>');\r\n  const prev_button = $('<button class=\"btn btn-outline-primary mr-2\">Previous</button>');\r\n  const next_button = $('<button class=\"btn btn-outline-primary\">Next</button>');\r\n  if (currentPage === 1) prev_button.prop('disabled', true);\r\n  if (currentPage === totalPages) next_button.prop('disabled', true);\r\n  prev_button.on('click', function () { if (currentPage > 1) { currentPage--; renderPage(); } });\r\n  next_button.on('click', function () { if (currentPage < totalPages) { currentPage++; renderPage(); } });\r\n  pagination.append(prev_button, next_button);\r\n  $('.card-body').last().append(pagination);\r\n}\r\n\r\nasync function populateProductGrid(products) {\r\n  $('.pagination-controls').remove();\r\n  const product_grid = $('.product-grid');\r\n  product_grid.empty();\r\n  let stock_mapping = {};\r\n  try {\r\n    let storedMapping = await getStorage(\"stock_mapping\");\r\n    if (storedMapping) stock_mapping = JSON.parse(storedMapping);\r\n  } catch(e) {\r\n    console.error(\"Error retrieving stock mapping:\", e);\r\n  }\r\n  products.forEach(function (product) {\r\n    const product_item = createProductItem(product, stock_mapping);\r\n    product_grid.append(product_item);\r\n  });\r\n}\r\n\r\nfunction createProductItem(product, stock_mapping) {\r\n  let stock_qty = (stock_mapping && stock_mapping[product.name] !== undefined)\r\n    ? stock_mapping[product.name]\r\n    : 0;\r\n  const product_item = $('<div class=\"card product-item\"></div>');\r\n  \r\n  // Create image element with a unique ID based on the product name\r\n  const product_image = $(`<img class=\"card-img-top\" id=\"item-image-${product.name}\" alt=\"${product.item_name}\" />`);\r\n  \r\n  if (!navigator.onLine) {\r\n  console.debug(\"System is offline. Attempting to load offline image for product:\", product.name);\r\n  product_image.on('error', function(e) {\r\n    console.error(\"Error event triggered while loading offline image for product:\", product.name, e);\r\n    console.debug(\"Current src attribute:\", product_image.attr('src'));\r\n  });\r\n  product_image.on('load', function() {\r\n    console.log(\"Offline image loaded successfully for product:\", product.name);\r\n  });\r\n  \r\n  getImageOffline(product.name)\r\n    .then(offlineUrl => {\r\n      if (offlineUrl) {\r\n        console.debug(\"Offline URL for\", product.name, \":\", offlineUrl);\r\n        product_image.attr('src', offlineUrl);\r\n      } else {\r\n        console.error(\"No offline image found for product:\", product.name);\r\n        product_image.attr('src', product.image);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Failed to retrieve offline image for product:\", product.name, error);\r\n      product_image.attr('src', product.image);\r\n    });\r\n} else {\r\n  product_image.attr('src', product.image);\r\n  storeImageOffline(product.name, product.image)\r\n    .catch(error => console.error(\"Failed to store image offline for product:\", product.name, error));\r\n}\r\n\r\n  product_item.append(product_image);\r\n  \r\n  const badge_color = (typeof stock_qty === 'number' && stock_qty > 0) ? 'bg-success' : 'bg-danger';\r\n  const badge_text  = (typeof stock_qty === 'number' && stock_qty > 0) ? stock_qty : '0';\r\n  const stock_badge = $(`<span class=\"badge ${badge_color} stock-badge\">${badge_text}</span>`);\r\n  product_item.append(stock_badge);\r\n  \r\n  const product_info = $('<div class=\"card-body product-info\"></div>');\r\n  const product_name = $('<h5 class=\"card-title product-name\"></h5>').text(product.item_name);\r\n  product_info.append(product_name);\r\n  const product_price = $('<p class=\"product-price\"></p>').text(formatter.format(product.valuation_rate));\r\n  product_item.append(product_price);\r\n  product_item.append(product_info);\r\n  \r\n  // When clicked, trigger the event to add the product to the cart\r\n  product_item.on('click', function () {\r\n    $(document).trigger('whrt-pos:add_to_cart', [product]);\r\n  });\r\n  return product_item;\r\n}\r\n\r\nexport function attachCategoryHandler() {\r\n  $(document).on('click', '.category', function(e) {\r\n    e.preventDefault();\r\n    let category = $(this).data('category');\r\n    loadProductsByCategory(category);\r\n  });\r\n}\r\n\r\nexport function attachSearchHandler() {\r\n  $(document).on('input', '.product-search-input', function (e) {\r\n    let searchQuery = $(this).val().toLowerCase();\r\n    if (!searchQuery) {\r\n      loadProductsByCategory(currentCategory);\r\n    } else {\r\n      searchProducts(searchQuery);\r\n    }\r\n  });\r\n}\r\n\r\nfunction searchProducts(searchQuery) {\r\n  frappe.call({\r\n    method: 'whrt_whitelabel.api.search_products',\r\n    args: { search_term: searchQuery },\r\n    callback: function(response) {\r\n      if (response.message) {\r\n        const filteredProducts = response.message;\r\n        renderPage(filteredProducts);\r\n      } else {\r\n        console.error(\"No products found for the search term:\", searchQuery);\r\n      }\r\n    },\r\n    error: function(err) {\r\n      console.error(\"Error while fetching products:\", err);\r\n    }\r\n  });\r\n}\r\n\r\nexport { renderPage };\r\n", "// whrt_pos_order_summary.js\r\n\r\n// Global variables to be updated with the current order details.\r\nlet invoice_id;\r\nlet selected_customer;\r\n\r\nexport function showOrderSummary(invoiceId, customer, cartItems, totalAmount, payments) {\r\n  // Update global invoice_id for print/email actions\r\n  invoice_id = invoiceId;\r\n  selected_customer = customer || \"Walk-in Customer\";\r\n\r\n  // Save order summary in localStorage for offline access\r\n  const orderSummary = {\r\n    invoiceId,\r\n    customer: selected_customer,\r\n    cartItems,\r\n    totalAmount,\r\n    payments\r\n  };\r\n  localStorage.setItem('last_order_summary', JSON.stringify(orderSummary));\r\n\r\n  // Populate modal with order summary details\r\n  $('#orderCompletionModal .customer-name').text(selected_customer);\r\n  $('#orderCompletionModal .invoice-id').html(`<strong>Invoice ID:</strong> ${invoiceId}`);\r\n\r\n  let itemsHtml = `<table class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>Item</th>\r\n        <th>Image</th>\r\n        <th>Qty</th>\r\n        <th>Amount</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>`;\r\n  cartItems.forEach(item => {\r\n    itemsHtml += `<tr>\r\n      <td>${item.item_name}</td>\r\n      <td><img src=\"${item.image}\" alt=\"Item Image\" width=\"50\" height=\"50\"></td>\r\n      <td>${item.quantity}</td>\r\n      <td>\u20B9${item.valuation_rate}</td>\r\n    </tr>`;\r\n  });\r\n  itemsHtml += `</tbody></table>`;\r\n  $('#orderCompletionModal .items-section').html(itemsHtml);\r\n\r\n  // Totals Section\r\n  $('#orderCompletionModal .totals-section').html(`<h4>Total: \u20B9${parseFloat(totalAmount).toFixed(2)}</h4>`);\r\n\r\n  // Payments Section\r\n  let paymentsHtml = `<ul class=\"list-group\">`;\r\n  payments.forEach(payment => {\r\n    paymentsHtml += `<li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      ${payment.mode_of_payment}\r\n      <span>\u20B9${parseFloat(payment.amount).toFixed(2)}</span>\r\n    </li>`;\r\n  });\r\n  paymentsHtml += `</ul>`;\r\n  $('#orderCompletionModal .payments-section').html(paymentsHtml);\r\n\r\n  // Show the modal\r\n  $('#orderCompletionModal').modal('show');\r\n}\r\n\r\nexport function initializeOrderSummaryModal() {\r\n  const orderCompletionModalHtml = `\r\n    <div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" id=\"orderCompletionModal\">\r\n      <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Order Summary</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <h3 class=\"customer-name\"></h3>\r\n            <div class=\"invoice-id\"></div>\r\n            <hr>\r\n            <div class=\"items-section\"></div>\r\n            <hr>\r\n            <div class=\"totals-section\"></div>\r\n            <hr>\r\n            <div class=\"payments-section\"></div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-primary print-receipt-btn\">Print Receipt</button>\r\n            <button class=\"btn btn-info email-receipt-btn\">Email Receipt</button>\r\n            <button class=\"btn btn-secondary new-order-btn\" data-dismiss=\"modal\">New Order</button>\r\n            <button class=\"btn btn-warning view-last-order-btn\">View Last Order</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n  \r\n  $('body').append(orderCompletionModalHtml);\r\n\r\n  // Print Receipt button click handler\r\n  $('#orderCompletionModal').find('.print-receipt-btn').on('click', function () {\r\n    if (!window.invoice_id) { \r\n      frappe.msgprint(\"No invoice found.\"); \r\n      return; \r\n    }\r\n    printReceipt();\r\n  });\r\n\r\n  // Email Receipt button click handler\r\n  $('#orderCompletionModal').find('.email-receipt-btn').on('click', function () {\r\n    if (!window.invoice_id) { \r\n      frappe.msgprint(\"No invoice found.\"); \r\n      return; \r\n    }\r\n    frappe.call({\r\n      method: 'whrt_whitelabel.api.email_invoice',\r\n      args: { invoice_id: invoice_id },\r\n      callback: function (response) {\r\n        if (response.message) { \r\n          frappe.msgprint(\"Invoice emailed successfully!\"); \r\n        } else { \r\n          frappe.msgprint(\"Failed to email invoice. Please try again.\"); \r\n        }\r\n      },\r\n      error: function (err) { \r\n        frappe.msgprint(\"An error occurred while emailing the invoice.\"); \r\n      }\r\n    });\r\n  });\r\n\r\n  // New Order button click handler\r\n  $('#orderCompletionModal').find('.new-order-btn').on('click', function () {\r\n    $('#orderCompletionModal').modal('hide');\r\n    selected_customer = null;\r\n    // Optionally, clear the cart and reset UI here.\r\n  });\r\n\r\n  // View Last Order button click handler (for offline viewing)\r\n  $('#orderCompletionModal').find('.view-last-order-btn').on('click', function () {\r\n    viewLastOrderSummary();\r\n  });\r\n}\r\n\r\nfunction viewLastOrderSummary() {\r\n  const lastOrderSummary = localStorage.getItem('last_order_summary');\r\n  \r\n  if (!lastOrderSummary) {\r\n    frappe.msgprint(\"No previous order summary found.\");\r\n    return;\r\n  }\r\n\r\n  const { invoiceId, customer, cartItems, totalAmount, payments } = JSON.parse(lastOrderSummary);\r\n\r\n  // Populate modal with order summary details\r\n  $('#orderCompletionModal .customer-name').text(customer);\r\n  $('#orderCompletionModal .invoice-id').html(`<strong>Invoice ID:</strong> ${invoiceId}`);\r\n\r\n  let itemsHtml = `<table class=\"table table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>Item</th>\r\n        <th>Image</th>\r\n        <th>Qty</th>\r\n        <th>Amount</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>`;\r\n  \r\n  cartItems.forEach(item => {\r\n    itemsHtml += `<tr>\r\n      <td>${item.item_name}</td>\r\n      <td><img src=\"${item.image}\" alt=\"Item Image\" width=\"50\" height=\"50\"></td>\r\n      <td>${item.quantity}</td>\r\n      <td>\u20B9${item.valuation_rate}</td>\r\n    </tr>`;\r\n  });\r\n  itemsHtml += `</tbody></table>`;\r\n  $('#orderCompletionModal .items-section').html(itemsHtml);\r\n\r\n  // Totals Section\r\n  $('#orderCompletionModal .totals-section').html(`<h4>Total: \u20B9${parseFloat(totalAmount).toFixed(2)}</h4>`);\r\n\r\n  // Payments Section\r\n  let paymentsHtml = `<ul class=\"list-group\">`;\r\n  payments.forEach(payment => {\r\n    paymentsHtml += `<li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      ${payment.mode_of_payment}\r\n      <span>\u20B9${parseFloat(payment.amount).toFixed(2)}</span>\r\n    </li>`;\r\n  });\r\n  paymentsHtml += `</ul>`;\r\n  $('#orderCompletionModal .payments-section').html(paymentsHtml);\r\n\r\n  // Show the modal\r\n  $('#orderCompletionModal').modal('show');\r\n}\r\n\r\nfunction printReceipt() {\r\n  // For online printing using frappe.utils.print\r\n  const doctype = \"POS Invoice\";\r\n  const print_format = \"POS Invoice\";\r\n  const letter_head = \"null\";\r\n  const language = frappe.boot.lang || \"en\";\r\n  frappe.utils.print(doctype, window.invoice_id, print_format, letter_head, language);\r\n  console.debug(\"Print function called for invoice:\", window.invoice_id);\r\n}\r\n\r\nexport { printReceipt };\r\n", "// whrt_pos_payment.js\r\nimport { setStorage, getStorage } from './whrt_pos_indexeddb.js';\r\nimport { updateCart, cart } from './whrt_pos_item_cart.js';\r\nimport { initializeOrderSummaryModal, showOrderSummary } from './whrt_pos_order_summary.js';\r\nimport { storeOfflineInvoice, offlineReduceStock } from './whrt_pos_data.js';\r\n\r\nexport function initializePaymentModal() {\r\n  // Build the Payment Modal HTML inspired by ERPNext's structure\r\n  const paymentModalHtml = `\r\n    <div class=\"modal fade\" id=\"paymentModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"paymentModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"paymentModalLabel\">Payment</h5>\r\n            <button type=\"button\" class=\"close close-payment-modal-btn\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <!-- Left side: Payment Methods -->\r\n              <div class=\"col-md-6\">\r\n                <h4>Payment Method</h4>\r\n                ${renderPaymentMethods()}\r\n              </div>\r\n              <!-- Right side: Payment Summary & Numpad -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"payment-summary mb-3\">\r\n                  <div class=\"d-flex justify-content-between\">\r\n                    <span>Grand Total:</span>\r\n                    <span class=\"grand-total-display\">\u20B90.00</span>\r\n                  </div>\r\n                  <div class=\"d-flex justify-content-between\">\r\n                    <span>Paid Amount:</span>\r\n                    <span class=\"paid-amount-display\">\u20B90.00</span>\r\n                  </div>\r\n                  <div class=\"d-flex justify-content-between\">\r\n                    <span>To Be Paid:</span>\r\n                    <span class=\"to-be-paid-display\">\u20B90.00</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"numpad d-flex flex-wrap\">\r\n                  ${renderNumpadButtons()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button class=\"btn btn-primary process-payment-btn\">Pay</button>\r\n            <button type=\"button\" class=\"btn btn-secondary close-payment-modal-btn\" data-dismiss=\"modal\">Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n  \r\n  $('body').append(paymentModalHtml);\r\n  \r\n  // Set currentInput reference (default to Cash input)\r\n  let currentInput = null;\r\n  \r\n  // Focus handlers for payment fields\r\n  $('#paymentModal').find('.payment-method-input').on('focus', function () {\r\n    currentInput = $(this);\r\n  });\r\n  \r\n  // Input events recalc totals when manual input changes\r\n  $('#paymentModal').find('.payment-method-input').on('input', function () {\r\n    recalcPaymentTotals();\r\n  });\r\n  \r\n  // Numpad events: when a numpad button is clicked update the current input\r\n  $('#paymentModal').find('.numpad-btn').on('click', function () {\r\n    const val = $(this).data('value');\r\n    if (!currentInput || currentInput.length === 0) {\r\n      // Default to cash if none focused\r\n      currentInput = $('#paymentModal').find('.cash-amount');\r\n    }\r\n    if (val === 'C') {\r\n      currentInput.val('');\r\n    } else {\r\n      currentInput.val(currentInput.val() + val);\r\n    }\r\n    recalcPaymentTotals();\r\n  });\r\n  \r\n  // Process payment button click\r\n  $('#paymentModal').find('.process-payment-btn').on('click', function () {\r\n    processPayment();\r\n  });\r\n  \r\n  // Close modal on close button click\r\n  $('#paymentModal').find('.close-payment-modal-btn').on('click', function () {\r\n    $('#paymentModal').modal('hide');\r\n  });\r\n}\r\n\r\nfunction renderPaymentMethods() {\r\n  // Return three fixed payment method inputs\r\n  return `\r\n    <div class=\"payment-method-row d-flex align-items-center mb-2\">\r\n      <label style=\"width: 120px;\">Cash</label>\r\n      <input type=\"number\" class=\"form-control payment-method-input cash-amount\" placeholder=\"0.00\" />\r\n    </div>\r\n    <div class=\"payment-method-row d-flex align-items-center mb-2\">\r\n      <label style=\"width: 120px;\">Credit Card</label>\r\n      <input type=\"number\" class=\"form-control payment-method-input credit-card-amount\" placeholder=\"0.00\" />\r\n    </div>\r\n    <div class=\"payment-method-row d-flex align-items-center mb-2\">\r\n      <label style=\"width: 120px;\">Mobile Payment</label>\r\n      <input type=\"number\" class=\"form-control payment-method-input mobile-amount\" placeholder=\"0.00\" />\r\n    </div>\r\n  `;\r\n}\r\n\r\nfunction renderNumpadButtons() {\r\n  // Create a simple numpad\r\n  const buttons = [1,2,3,4,5,6,7,8,9,0,'.','C'];\r\n  return buttons.map(btn => `<button class=\"btn btn-secondary numpad-btn m-1\" data-value=\"${btn}\">${btn}</button>`).join(\"\");\r\n}\r\n\r\nfunction recalcPaymentTotals() {\r\n  // Update totals in the payment modal dynamically\r\n  const grandTotal = parseFloat($('.grand-total').text().replace(\"\u20B9\", \"\")) || 0;\r\n  const cashAmt = parseFloat($('#paymentModal').find('.cash-amount').val()) || 0;\r\n  const ccAmt = parseFloat($('#paymentModal').find('.credit-card-amount').val()) || 0;\r\n  const mobileAmt = parseFloat($('#paymentModal').find('.mobile-amount').val()) || 0;\r\n  const paidAmount = cashAmt + ccAmt + mobileAmt;\r\n  const toBePaid = grandTotal - paidAmount;\r\n  $('#paymentModal').find('.paid-amount-display').text(\"\u20B9\" + paidAmount.toFixed(2));\r\n  $('#paymentModal').find('.to-be-paid-display').text(\"\u20B9\" + (toBePaid < 0 ? 0 : toBePaid).toFixed(2));\r\n}\r\n\r\nasync function processPayment() {\r\n  const grandTotal = parseFloat($('.grand-total').text().replace(\"\u20B9\", \"\")) || 0;\r\n  const cashAmt = parseFloat($('#paymentModal').find('.cash-amount').val()) || 0;\r\n  const ccAmt = parseFloat($('#paymentModal').find('.credit-card-amount').val()) || 0;\r\n  const mobileAmt = parseFloat($('#paymentModal').find('.mobile-amount').val()) || 0;\r\n  const totalPaid = cashAmt + ccAmt + mobileAmt;\r\n  \r\n  if (totalPaid < grandTotal) {\r\n    frappe.msgprint(\"Paid amount is less than Grand Total!\");\r\n    return;\r\n  }\r\n  \r\n  let paymentEntries = [];\r\n  if (cashAmt > 0) paymentEntries.push({ mode_of_payment: \"Cash\", amount: cashAmt });\r\n  if (ccAmt > 0) paymentEntries.push({ mode_of_payment: \"Credit Card\", amount: ccAmt });\r\n  if (mobileAmt > 0) paymentEntries.push({ mode_of_payment: \"Mobile Payment\", amount: mobileAmt });\r\n  \r\n  let selected_company = await getStorage(\"selected_company\");\r\n  let selected_pos_profile = await getStorage(\"selected_pos_profile\");\r\n  if (!selected_company || !selected_pos_profile) {\r\n    frappe.msgprint(\"Please select a Company and POS Profile before processing payment.\");\r\n    return;\r\n  }\r\n  \r\n  let taxation = await getStorage(\"pos_profile_taxation\") || \"{}\";\r\n  let invoicePayload = {\r\n    cart: JSON.stringify(cart),\r\n    customer: window.selected_customer || \"Walk-in Customer\",\r\n    pos_profile: selected_pos_profile,\r\n    payments: JSON.stringify(paymentEntries),\r\n    taxes_and_charges: taxation\r\n  };\r\n  \r\n  // If offline, store invoice and reduce stock locally, then clear cart and update UI\r\n  if (!navigator.onLine) {\r\n    frappe.msgprint(\"No internet connection. Invoice stored offline and stock updated locally.\");\r\n    await storeOfflineInvoice(invoicePayload);\r\n    await offlineReduceStock(cart);\r\n     // Save a temporary invoice id for offline order summary (if needed)\r\n    const offlineInvoiceId = \"OFF-\" + new Date().getTime();\r\n    invoicePayload.temp_id = offlineInvoiceId;\r\n    \r\n    // Call showOrderSummary with offline data\r\n    showOrderSummary(offlineInvoiceId, invoicePayload.customer, JSON.parse(invoicePayload.cart), grandTotal, paymentEntries);\r\n    cart.length = 0;\r\n    updateCart();\r\n    $('#paymentModal').modal('hide');\r\n    return;\r\n  }\r\n  \r\n  // Online invoice creation and stock reduction\r\n  frappe.call({\r\n    method: 'whrt_whitelabel.api.create_invoice',\r\n    args: invoicePayload,\r\n    callback: function (invoice_response) {\r\n      if (invoice_response.message && invoice_response.message.invoice_id) {\r\n        const invoice_data = invoice_response.message;\r\n        window.invoice_id = invoice_data.invoice_id;\r\n        // Reduce stock for each invoiced item\r\n        cart.forEach(function(item){\r\n          if (item.name && item.quantity) {\r\n            frappe.call({\r\n              method: 'whrt_whitelabel.api.reduce_stock',\r\n              args: { item_code: item.name, quantity: item.quantity },\r\n              callback: function(res) {\r\n                console.log(\"Reduced stock for\", item.name);\r\n              }\r\n            });\r\n          }\r\n        });\r\n        // Backup invoiced items for order summary before clearing\r\n        let invoicedItems = JSON.parse(invoicePayload.cart);\r\n        cart.length = 0;\r\n        updateCart();\r\n        frappe.msgprint(\"Invoice created successfully! Invoice ID: \" + window.invoice_id);\r\n        // Trigger payment completion to show Order Summary\r\n        showOrderSummary(window.invoice_id, invoicePayload.customer, invoicedItems, grandTotal, paymentEntries);\r\n      } else {\r\n        frappe.msgprint(\"Invoice creation failed. Please check logs.\");\r\n      }\r\n      $('#paymentModal').modal('hide');\r\n    },\r\n    error: async function (err) {\r\n      frappe.msgprint(\"Server error. Attempting offline invoice storage.\");\r\n      await storeOfflineInvoice(invoicePayload);\r\n      await offlineReduceStock(cart);\r\n      cart.length = 0;\r\n      updateCart();\r\n      $('#paymentModal').modal('hide');\r\n    }\r\n  });\r\n}\r\n\r\nfunction onPaymentSuccess(invoiceId, customer, invoicedItems, totalAmount, payments) {\r\n    console.log(\"Payment successful for Invoice:\", invoiceId);\r\n    window.invoice_id = invoiceId;\r\n    window.selected_customer = customer;\r\n    // Populate and show the Order Summary Modal using the imported function\r\n    showOrderSummary(invoiceId, customer, invoicedItems, totalAmount, payments);\r\n}\r\n\r\nexport { recalcPaymentTotals, processPayment };\r\nexport { onPaymentSuccess };\r\n", "// whrt_pos_customer.js\r\nimport { setStorage, getStorage } from './whrt_pos_indexeddb.js';\r\n\r\nexport function attachCustomerSearch() {\r\n  const customer_search_bar = $('.customer-search-bar');\r\n  customer_search_bar.find('.customer-search-input').on('input', async function () {\r\n    const search_term = $(this).val().trim().toLowerCase();\r\n    if (navigator.onLine) {\r\n      try {\r\n        let response = await frappe.call({\r\n          method: 'whrt_whitelabel.api.search_customers',\r\n          args: { search_term: search_term }\r\n        });\r\n        if (response.message) {\r\n          const customers = response.message;\r\n          await setStorage(\"customers\", JSON.stringify(customers));\r\n          showCustomerDropdown(customers);\r\n          return;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Online customer search failed:\", error);\r\n      }\r\n    }\r\n    let storedCustomers = await getStorage(\"customers\");\r\n    let combined = storedCustomers ? JSON.parse(storedCustomers) : [];\r\n    let filtered = combined.filter(cust => {\r\n      let combinedStr = (cust.customer_name + \" \" + (cust.mobile_no || \"\")).toLowerCase();\r\n      return combinedStr.includes(search_term);\r\n    });\r\n    if (filtered.length > 0) { showCustomerDropdown(filtered); }\r\n    else { frappe.msgprint(\"No matching offline customer data found.\"); }\r\n  });\r\n  \r\n  $('.customer-search-bar').find('.add-customer-btn').on('click', function () {\r\n    const customer_name = $('.customer-search-bar').find('.customer-search-input').val().trim();\r\n    if (!customer_name) {\r\n      frappe.msgprint(\"Please enter a customer name.\");\r\n      return;\r\n    }\r\n    frappe.prompt([\r\n      { fieldname: 'mobile_no', label: 'Mobile No', fieldtype: 'Data', reqd: 1, description: 'Enter the customer mobile number.' }\r\n    ], async function (values) {\r\n      if (navigator.onLine) {\r\n        try {\r\n          let response = await frappe.call({\r\n            method: 'whrt_whitelabel.api.set_customer_info',\r\n            args: {\r\n              doc: {\r\n                doctype: 'Customer',\r\n                customer_name: customer_name,\r\n                mobile_no: values.mobile_no,\r\n                customer_type: 'Individual',\r\n                customer_group: 'Commercial',\r\n                territory: 'All Territories'\r\n              }\r\n            }\r\n          });\r\n          if (response.message) {\r\n            frappe.msgprint(\"Customer added successfully!\");\r\n            window.selected_customer = response.message.name;\r\n          }\r\n        } catch (error) {\r\n          frappe.msgprint(\"Error adding customer: \" + error);\r\n          console.error(\"Error adding customer:\", error);\r\n        }\r\n      } else {\r\n        addCustomerOffline(customer_name, values.mobile_no);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction showCustomerDropdown(customers) {\r\n  const customer_dropdown = $('<div class=\"customer-dropdown list-group\"></div>').css({\r\n    'position': 'absolute',\r\n    'background': '#fff',\r\n    'border': '1px solid #ddd',\r\n    'width': '100%',\r\n    'max-height': '200px',\r\n    'overflow-y': 'auto',\r\n    'z-index': '1000',\r\n    'margin-top': '5px',\r\n    'box-shadow': '0px 4px 10px rgba(0, 0, 0, 0.1)'\r\n  });\r\n  $('.customer-dropdown').remove();\r\n  customers.forEach(customer => {\r\n    const customer_option = $(`\r\n      <a class=\"list-group-item list-group-item-action customer-option\">\r\n        ${customer.customer_name} (${customer.mobile_no || 'No mobile number'})\r\n      </a>\r\n    `).on('click', function () {\r\n      window.selected_customer = customer.name;\r\n      $('.customer-search-bar').find('.customer-search-input').val(customer.customer_name);\r\n      customer_dropdown.remove();\r\n    });\r\n    customer_dropdown.append(customer_option);\r\n  });\r\n  $('.customer-search-bar').append(customer_dropdown);\r\n}\r\n\r\nasync function addCustomerOffline(customer_name, mobile_no) {\r\n  try {\r\n    let storedOffline = await getStorage(\"customers\");\r\n    let offlineArr = storedOffline ? JSON.parse(storedOffline) : [];\r\n    let newCustomer = {\r\n      name: \"local_\" + Date.now(),\r\n      customer_name: customer_name,\r\n      mobile_no: mobile_no,\r\n      synced: false\r\n    };\r\n    offlineArr.push(newCustomer);\r\n    await setStorage(\"customers\", JSON.stringify(offlineArr));\r\n    frappe.msgprint(\"Customer added offline successfully!\");\r\n    window.selected_customer = newCustomer.name;\r\n    $('.customer-search-bar').find('.customer-search-input').val(newCustomer.customer_name);\r\n  } catch (error) {\r\n    frappe.msgprint(\"Error storing offline customer: \" + error);\r\n    console.error(\"Error storing offline customer:\", error);\r\n  }\r\n}\r\n\r\nexport { addCustomerOffline };\r\n", "// whrt_pos_session.js\r\nimport { setStorage, getStorage, removeStorage, clearStorage } from './whrt_pos_indexeddb.js';\r\nimport { fetchAndStoreDoctypeData } from './whrt_pos_data.js';\r\n\r\nexport async function showPosSelectionDialog() {\r\n  let saved_company = await getStorage(\"selected_company\");\r\n  let saved_pos_profile = await getStorage(\"selected_pos_profile\");\r\n  let saved_opening_balance = await getStorage(\"opening_balance\");\r\n  if (saved_company && saved_pos_profile) {\r\n    frappe.msgprint(`Loaded saved session: ${saved_company} - ${saved_pos_profile}`);\r\n    window.company_selected = saved_company;\r\n    window.pos_profile_selected = saved_pos_profile;\r\n    if (saved_opening_balance) window.opening_balance_details = JSON.parse(saved_opening_balance);\r\n    return;\r\n  }\r\n  let dialog = new frappe.ui.Dialog({\r\n    title: \"Select POS Session Details\",\r\n    fields: [\r\n      { label: \"Company\", fieldname: \"company\", fieldtype: \"Select\", options: \"\", reqd: 1 },\r\n      { label: \"POS Profile\", fieldname: \"pos_profile\", fieldtype: \"Link\", options: \"POS Profile\", reqd: 1 },\r\n      {\r\n        label: \"Opening Balance Details\", fieldname: \"opening_balance\", fieldtype: \"Table\", reqd: 1,\r\n        fields: [\r\n          { label: \"Mode of Payment\", fieldname: \"mode_of_payment\", fieldtype: \"Link\", options: \"Mode of Payment\", in_list_view: 1, reqd: 1 },\r\n          { label: \"Opening Amount\", fieldname: \"opening_amount\", fieldtype: \"Currency\", in_list_view: 1 }\r\n        ]\r\n      }\r\n    ],\r\n    primary_action_label: \"Submit\",\r\n    primary_action: async function(values) {\r\n      if (!values.company || !values.pos_profile) {\r\n        frappe.msgprint(\"Please select both Company and POS Profile.\");\r\n        return;\r\n      }\r\n      await setStorage(\"selected_company\", values.company);\r\n      await setStorage(\"selected_pos_profile\", values.pos_profile);\r\n      await setStorage(\"opening_balance\", JSON.stringify(values.opening_balance));\r\n      window.company_selected = values.company;\r\n      window.pos_profile_selected = values.pos_profile;\r\n      frappe.msgprint(`Selected: ${values.company} - ${values.pos_profile}`);\r\n      let periodStart = frappe.datetime.get_today() + \" 00:00:00\";\r\n      let periodEnd = frappe.datetime.add_days(frappe.datetime.get_today(), 1) + \" 00:00:00\";\r\n      frappe.call({\r\n        method: 'whrt_whitelabel.api.create_pos_opening_entry',\r\n        args: {\r\n          company: values.company,\r\n          pos_profile: values.pos_profile,\r\n          period_start_date: periodStart,\r\n          period_end_date: periodEnd,\r\n          opening_balance_details: JSON.stringify(values.opening_balance)\r\n        },\r\n        callback: async function(res) {\r\n          if (res.message && res.message.opening_entry) {\r\n            frappe.msgprint(\"POS Opening Entry created: \" + res.message.opening_entry);\r\n            await addPosOpeningEntry(res.message.opening_entry);\r\n            // Now fetch and store all required data\r\n            frappe.msgprint(\"Loading POS data... This may take a moment.\");\r\n            await fetchAndStoreDoctypeData();\r\n            frappe.msgprint(\"POS is ready to use!\");\r\n          } else {\r\n            frappe.msgprint(\"Failed to create POS Opening Entry: \" + (res.error || \"\"));\r\n          }\r\n        }\r\n      });\r\n      dialog.hide();\r\n    }\r\n  });\r\n  frappe.call({\r\n    method: \"frappe.client.get_list\",\r\n    args: { doctype: \"Company\", fields: [\"name\"] },\r\n    callback: function (response) {\r\n      let companies = response.message;\r\n      if (companies && companies.length) {\r\n        let company_options = companies.map(company => company.name).join(\"\\n\");\r\n        dialog.set_df_property(\"company\", \"options\", company_options);\r\n      } else {\r\n        frappe.msgprint(\"No companies found!\");\r\n      }\r\n    }\r\n  });\r\n  dialog.fields_dict.company.df.onchange = function () {\r\n    let selected_company = dialog.get_value(\"company\");\r\n    if (selected_company) {\r\n      frappe.call({\r\n        method: \"whrt_whitelabel.api.get_pos_profiles\",\r\n        args: { company: selected_company },\r\n        callback: function (response) {\r\n          let profiles = response.message;\r\n          let options = \"\";\r\n          if (profiles && profiles.length) {\r\n            profiles.forEach(function (profile) { options += profile.name + \"\\n\"; });\r\n          } else {\r\n            options = \"POS Profile\";\r\n          }\r\n          dialog.set_df_property(\"pos_profile\", \"options\", options);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  dialog.fields_dict.pos_profile.df.onchange = function () {\r\n    let selected_profile = dialog.get_value(\"pos_profile\");\r\n    if (!selected_profile || selected_profile === \"undefined\") return;\r\n    frappe.call({\r\n      method: \"frappe.client.get\",\r\n      args: { doctype: \"POS Profile\", name: selected_profile },\r\n      callback: function (r) {\r\n        if (!r.message) return;\r\n        let pos_profile = r.message;\r\n        let template_name = pos_profile.taxes_and_charges;\r\n        let tax_category = pos_profile.tax_category;\r\n        frappe.call({\r\n          method: \"whrt_whitelabel.api.get_sales_taxes_and_charges_details\",\r\n          args: { template_name: template_name },\r\n          callback: function(taxRes) {\r\n            let tax_rules = taxRes.message || [];\r\n            let taxData = {\r\n              taxes_and_charges: template_name,\r\n              tax_category: tax_category,\r\n              rules: tax_rules\r\n            };\r\n            setStorage(\"pos_profile_taxation\", JSON.stringify(taxData));\r\n            let warehouse = pos_profile.warehouse;\r\n            setStorage(\"pos_profile_warehouse\", warehouse);\r\n            let payments = pos_profile.payments || [];\r\n            let rows = [];\r\n            payments.forEach(function (payment) { \r\n              rows.push({ mode_of_payment: payment.mode_of_payment, opening_amount: 0 }); \r\n            });\r\n            if (rows.length === 0) {\r\n              rows.push({ mode_of_payment: \"Cash\", opening_amount: 0 });\r\n              rows.push({ mode_of_payment: \"Credit Card\", opening_amount: 0 });\r\n              rows.push({ mode_of_payment: \"Mobile Payment\", opening_amount: 0 });\r\n            }\r\n            dialog.set_value(\"opening_balance\", rows);\r\n            dialog.refresh();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n  dialog.show();\r\n}\r\n\r\nasync function addPosOpeningEntry(newEntryId) {\r\n  let entriesStr = await getStorage(\"pos_opening_entries\");\r\n  let entries = [];\r\n  if (entriesStr) {\r\n    try { entries = JSON.parse(entriesStr); } catch (e) { entries = []; }\r\n  }\r\n  entries.push(newEntryId);\r\n  await setStorage(\"pos_opening_entries\", JSON.stringify(entries));\r\n}\r\n\r\nexport async function finalizePossession() {\r\n  console.debug(\"FinalizePossession called\");\r\n\r\n  let savedCart = await getStorage('cart');\r\n  console.debug(\"Saved cart:\", savedCart);\r\n  if (savedCart && JSON.parse(savedCart).length > 0) {\r\n    console.debug(\"There are pending cart items. Finalizing transactions...\");\r\n  }\r\n\r\n  let entriesStr = await getStorage(\"pos_opening_entries\");\r\n  console.debug(\"pos_opening_entries from storage:\", entriesStr);\r\n  let openingEntries = entriesStr ? JSON.parse(entriesStr) : [];\r\n\r\n  if (openingEntries.length === 0) {\r\n    frappe.msgprint(\"No POS Opening Entry found. Cannot create POS Closing Entry.\");\r\n    await finalizeSessionCleanup();\r\n    return;\r\n  }\r\n\r\n  let periodEnd = frappe.datetime.get_today() + \" 23:59:59\";\r\n  let posting_date = frappe.datetime.get_today();\r\n  let nowDate = new Date();\r\n  let posting_time = nowDate.toTimeString().split(\" \")[0];\r\n  console.debug(\"Closing parameters - periodEnd:\", periodEnd, \"posting_date:\", posting_date, \"posting_time:\", posting_time);\r\n\r\n  for (const pos_opening_entry of openingEntries) {\r\n    console.debug(\"Creating closing entry for opening entry:\", pos_opening_entry);\r\n    await new Promise((resolve, reject) => {\r\n      frappe.call({\r\n        method: 'whrt_whitelabel.api.create_pos_closing_entry',\r\n        args: {\r\n          pos_opening_entry: pos_opening_entry,\r\n          period_end_date: periodEnd,\r\n          posting_date: posting_date,\r\n          posting_time: posting_time,\r\n          pos_transactions: \"[]\",\r\n          payment_reconciliation: \"[]\",\r\n          taxes: \"[]\",\r\n          grand_total: \"0\",\r\n          net_total: \"0\",\r\n          total_quantity: \"0\"\r\n        },\r\n        callback: function(res) {\r\n          console.debug(\"Response for closing entry of\", pos_opening_entry, \":\", res);\r\n          if (res.message && res.message.closing_entry) {\r\n            frappe.msgprint(\"POS Closing Entry created for \" + pos_opening_entry + \": \" + res.message.closing_entry);\r\n          } else {\r\n            frappe.msgprint(\"Failed to create POS Closing Entry for \" + pos_opening_entry + \": \" + (res.error || \"\"));\r\n          }\r\n          resolve();\r\n        },\r\n        error: function(err) {\r\n          frappe.msgprint(\"Error while creating POS Closing Entry: \" + err);\r\n          reject(err);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  await finalizeSessionCleanup();\r\n}\r\n\r\nasync function finalizeSessionCleanup() {\r\n  console.debug(\"Finalizing session cleanup: removing stored session data...\");\r\n  // Remove only session-specific keys; clear cached master data as well.\r\n  await Promise.all([\r\n    removeStorage(\"selected_company\"),\r\n    removeStorage(\"selected_pos_profile\"),\r\n    removeStorage(\"opening_balance\"),\r\n    removeStorage(\"pos_opening_entries\"),\r\n    removeStorage(\"items\"),\r\n    removeStorage(\"items_last_fetched\"),\r\n    removeStorage(\"item_groups\"),\r\n    removeStorage(\"item_groups_last_fetched\"),\r\n    removeStorage(\"customers\"),\r\n    removeStorage(\"customers_last_fetched\"),\r\n    removeStorage(\"stock_mapping\"),\r\n    removeStorage(\"stock_last_fetched\"),\r\n    removeStorage(\"pos_profile_taxation\")\r\n  ]);\r\n  // Also clear the persistent image flag so that images load on next login.\r\n  localStorage.removeItem(\"images_loaded_flag\");\r\n  console.debug(\"Cleanup complete. Reloading page.\");\r\n  frappe.msgprint(\"POS session closed. All data cleared.\");\r\n  window.location.reload();\r\n}\r\n", "// whrt_pos_controller.js\r\nimport { injectDependencies } from './whrt_pos_injector.js';\r\nimport { initIDB, getStorage } from './whrt_pos_indexeddb.js';\r\nimport { loadCategories, attachCategoryHandler, attachSearchHandler } from './whrt_pos_item_selector.js';\r\nimport { loadCartFromStorage, addToCart } from './whrt_pos_item_cart.js';\r\nimport { initializePaymentModal } from './whrt_pos_payment.js';\r\nimport { attachCustomerSearch } from './whrt_pos_customer.js';\r\nimport { showOrderSummary, initializeOrderSummaryModal } from './whrt_pos_order_summary.js';\r\nimport { showPosSelectionDialog, finalizePossession } from './whrt_pos_session.js';\r\nimport { \r\n    fetchAndStoreDoctypeData, \r\n    updateItemsIfNeeded,\r\n    updateItemGroupsIfNeeded,\r\n    updateCustomersIfNeeded,\r\n    updateStockData,\r\n    syncOfflineInvoices,\r\n    storeAllImagesOffline \r\n} from './whrt_pos_data.js';\r\nimport { onPaymentSuccess } from './whrt_pos_payment.js';\r\n\r\nexport class Controller {\r\n\tconstructor(wrapper) {\r\n\t\tthis.wrapper = wrapper;\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\tasync initialize() {\r\n\t\t// Inject CSS/JS dependencies\r\n\t\tinjectDependencies();\r\n\r\n\t\t// Build the complete POS layout\r\n\t\tthis.wrapper.innerHTML = `\r\n      <div class=\"wrapper\">\r\n        <!-- Navbar -->\r\n        <nav class=\"main-header navbar navbar-expand navbar-dark\">\r\n          <ul class=\"navbar-nav\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" data-widget=\"pushmenu\" href=\"#\"><i class=\"fas fa-bars\"></i></a>\r\n            </li>\r\n          </ul>\r\n          <div class=\"navbar-center\">\r\n            <h3 class=\"mb-0\">WHRT POS</h3>\r\n          </div>\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n              <a href=\"/home\" class=\"btn btn-home btn-sm\" style=\"margin-right: 5px;\">Home</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <button class=\"btn btn-info btn-sm debug-btn\" style=\"margin-right: 5px;\">Debug</button>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <button class=\"btn btn-danger btn-sm logout-btn\" style=\"color: #ffffff; margin-right: 5px;\">Logout</button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        \r\n        <!-- Sidebar -->\r\n        <aside class=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n          <a href=\"#\" class=\"brand-link\">\r\n            <span class=\"brand-text\">POS System</span>\r\n          </a>\r\n          <div class=\"sidebar\">\r\n            <nav class=\"mt-2\">\r\n              <ul class=\"nav nav-pills nav-sidebar flex-column\" id=\"category-list\" data-widget=\"treeview\" role=\"menu\">\r\n                <!-- Categories will be loaded here -->\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </aside>\r\n        \r\n        <!-- Content Wrapper -->\r\n        <div class=\"content-wrapper\">\r\n          <section class=\"content pt-3\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                <!-- Main Products Column -->\r\n                <div class=\"col-md-9\" id=\"main-content\">\r\n                  <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                      <div class=\"product-search-bar\">\r\n                        <input type=\"text\" class=\"form-control product-search-input\" placeholder=\"Search for products...\">\r\n                        <div class=\"my-3 text-center\">\r\n                          <button id=\"store-image-btn\" class=\"btn btn-primary\">Update Images</button>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"product-grid row\"></div>\r\n                      <div class=\"pagination-controls\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- Right Column: Customer Search & Item Cart -->\r\n                <div class=\"col-md-3\" id=\"right-col\">\r\n                  <div class=\"customer-search-bar mb-3\">\r\n                    <input type=\"text\" class=\"form-control customer-search-input\" placeholder=\"Search or add customer\">\r\n                    <button class=\"btn btn-info mt-2 add-customer-btn\">Add New Customer</button>\r\n                  </div>\r\n                  <div class=\"card\">\r\n                    <div class=\"card-header\"><h4>Item Cart</h4></div>\r\n                    <div class=\"card-body\">\r\n                      <div class=\"cart-items\"></div>\r\n                      <hr>\r\n                      <div class=\"cart-summary\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <span>Total Quantity:</span>\r\n                          <span class=\"cart-quantity\">0</span>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between\">\r\n                          <span>Net Total:</span>\r\n                          <span>\u20B9<span class=\"net-total\">0.00</span></span>\r\n                        </div>\r\n                        <div class=\"tax-lines\"></div>\r\n                        <div class=\"d-flex justify-content-between mt-2 font-weight-bold text-primary\">\r\n                          <span>Grand Total:</span>\r\n                          <span>\u20B9<span class=\"grand-total\">TBD</span></span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"card-footer text-center\">\r\n                      <button class=\"btn btn-success checkout-btn\">Checkout</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- End Right Column -->\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n\t\t<!-- Progress Modal for Image Loading -->\r\n        <div class=\"modal\" id=\"image-progress-modal\" tabindex=\"-1\" role=\"dialog\">\r\n          <div class=\"modal-dialog modal-sm\" role=\"document\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-body text-center\">\r\n                <div class=\"spinner-border text-primary\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n                <div class=\"progress mt-3\">\r\n                  <div id=\"progress-bar\" class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%;\" \r\n                       aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n\t\t// Bind Home button event\r\n\t\t$(document).on('click', '.btn-home', (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\twindow.location.href = '/desk';\r\n\t\t});\r\n\r\n\t\t// Bind Debug button event\r\n\t\t$(document).on('click', '.debug-btn', (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tconsole.debug(\"Debug button clicked!\");\r\n\t\t});\r\n\r\n\t\t// Bind Logout button event to finalize session\r\n\t\t$(document).on('click', '.logout-btn', async (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tawait finalizePossession();\r\n\t\t});\r\n\t\t\r\n\t\t// Initialize IndexedDB for offline storage FIRST so that getStorage works correctly.\r\n\t\tawait initIDB();\r\n\r\n\t\t// Then show the POS session selection dialog.\r\n\t\tawait showPosSelectionDialog();\r\n\r\n\t\t// After session selection, load data.\r\n\t\t// Check if items already exist; if so, update only changed data.\r\n\t\tif (await getStorage(\"items\")) {\r\n\t\t\tawait updateItemsIfNeeded();\r\n\t\t\tawait updateItemGroupsIfNeeded();\r\n\t\t\tawait updateCustomersIfNeeded();\r\n\t\t\tawait updateStockData();\r\n\t\t\t\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t// First time load: fetch and store all data.\r\n\t\t\tawait fetchAndStoreDoctypeData();\r\n\t\t\tawait updateStockData();\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\t// Load cart data\r\n\t\tawait loadCartFromStorage();\r\n\t\t\r\n\t\t// Bind manual image update button (if needed)\r\n\t\t$(document).on('click', '#store-image-btn', async function () {\r\n\t\t  try {\r\n\t\t\tawait storeAllImagesOffline();\r\n\t\t\tfrappe.msgprint(\"Item images updated offline successfully.\");\r\n\t\t  } catch (error) {\r\n\t\t\tfrappe.msgprint(\"Failed to update images: \" + error);\r\n\t\t  }\r\n\t\t});\r\n\r\n\t\t// Listen for the event to add a product to the cart\r\n\t\t$(document).on('whrt-pos:add_to_cart', async function (e, product) {\r\n\t\t\tconsole.debug(\"Event 'whrt-pos:add_to_cart' received with product:\", product);\r\n\t\t\t// Ensure a customer is selected; fallback to \"Walk-in Customer\"\r\n\t\t\tawait addToCart(product, window.selected_customer || \"Walk-in Customer\");\r\n\t\t});\r\n\r\n\t\t// Initialize Payment Modal, Order Summary Modal, and Customer Search\r\n\t\tinitializePaymentModal();\r\n\t\tinitializeOrderSummaryModal();\r\n\t\tattachCustomerSearch();\r\n\r\n\t\t// Bind event to open Payment Modal when checkout button is clicked\r\n\t\t$('.checkout-btn').on('click', function () {\r\n\t\t\tconsole.log(\"Grand Total:\", $('.grand-total').text());\r\n\t\t\t$('#paymentModal').modal('show');\r\n\t\t});\r\n\r\n\t\t// Listen for payment completion globally and show order summary\r\n\t\t$(document).on('payment:completed', (e, invoiceId, customer, invoicedItems, totalAmount, payments) => {\r\n\t\t\tshowOrderSummary(invoiceId, customer, invoicedItems, totalAmount, payments);\r\n\t\t});\r\n\r\n\t\t// Load the categories and attach event handlers\r\n\t\tloadCategories();\r\n\t\tattachCategoryHandler();\r\n\t\tattachSearchHandler();\r\n\r\n\t\t// Setup offline invoice sync on connection restore and periodically\r\n\t\twindow.addEventListener('online', function() {\r\n\t\t\tfrappe.msgprint(\"Connection restored. Syncing offline invoices...\");\r\n\t\t\tsyncOfflineInvoices\r\n\t\t});\r\n\t\tsetInterval(() => {\r\n\t\t\tif (navigator.onLine) {\r\n\t\t\t\tsyncOfflineInvoices\r\n\t\t\t}\r\n\t\t}, 30000);\r\n\t}\r\n}\r\n\r\nwindow.whrt_pos = window.whrt_pos || {};\r\nwindow.whrt_pos.Controller = Controller;\r\n"],
  "mappings": ";;AACO,WAAS,qBAAqB;AAEnC,QAAI,CAAC,EAAE,mFAAmF,EAAE,QAAQ;AAClG,QAAE,MAAM,EAAE,OAAO,qGAAqG;AAAA,IACxH;AACA,QAAI,CAAC,EAAE,kFAAkF,EAAE,QAAQ;AACjG,QAAE,MAAM,EAAE,OAAO,6FAA4F;AAAA,IAC/G;AACA,QAAI,CAAC,EAAE,uFAAuF,EAAE,QAAQ;AACtG,QAAE,MAAM,EAAE,OAAO,yGAAyG;AAAA,IAC5H;AACA,QAAI,CAAC,EAAE,6FAA6F,EAAE,QAAQ;AAC5G,QAAE,MAAM,EAAE,OAAO,wGAAuG;AAAA,IAC1H;AACA,QAAI,CAAC,EAAE,oFAAoF,EAAE,QAAQ;AACnG,QAAE,MAAM,EAAE,OAAO,+FAA8F;AAAA,IACjH;AACA,QAAI,CAAC,EAAE,sFAAsF,EAAE,QAAQ;AACrG,QAAE,MAAM,EAAE,OAAO,iGAAgG;AAAA,IACnH;AACA,QAAI,CAAC,EAAE,4FAA4F,EAAE,QAAQ;AAC3G,QAAE,MAAM,EAAE,OAAO,8GAA8G;AAAA,IACjI;AACA,QAAI,CAAC,EAAE,yFAAyF,EAAE,QAAQ;AACxG,QAAE,MAAM,EAAE,OAAO,2GAA2G;AAAA,IAC9H;AAGA,QAAI,CAAC,EAAE,wBAAwB,EAAE,QAAQ;AACvhB;AAAA,IACH;AAAA,EACF;;;AC9OO,MAAI,KAAK;AAEhB,iBAAsB,UAAU;AAC9B,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI,UAAU,UAAU,KAAK,eAAe,CAAC;AAC7C,cAAQ,kBAAkB,SAAU,OAAO;AACzC,aAAK,MAAM,OAAO;AAClB,YAAI,CAAC,GAAG,iBAAiB,SAAS,SAAS,GAAG;AAC5C,aAAG,kBAAkB,WAAW,EAAE,SAAS,MAAM,CAAC;AAAA,QACpD;AAAA,MACF;AACA,cAAQ,YAAY,SAAU,OAAO;AACnC,aAAK,MAAM,OAAO;AAClB,gBAAQ;AAAA,MACV;AACA,cAAQ,UAAU,SAAU,OAAO;AACjC,gBAAQ,MAAM,oBAAoB,MAAM,OAAO,SAAS;AACxD,eAAO,MAAM,OAAO,SAAS;AAAA,MAC/B;AAAA,IACF,CAAC;AAAA,EACH;AAEA,iBAAsB,WAAW,KAAK;AACpC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI,cAAc,GAAG,YAAY,CAAC,SAAS,GAAG,UAAU;AACxD,UAAI,QAAQ,YAAY,YAAY,SAAS;AAC7C,UAAI,UAAU,MAAM,IAAI,GAAG;AAC3B,cAAQ,YAAY,WAAY;AAC9B,gBAAQ,QAAQ,SAAS,QAAQ,OAAO,QAAQ,IAAI;AAAA,MACtD;AACA,cAAQ,UAAU,WAAY;AAC5B,eAAO,QAAQ,KAAK;AAAA,MACtB;AAAA,IACF,CAAC;AAAA,EACH;AAEA,iBAAsB,WAAW,KAAK,OAAO;AAC3C,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI,cAAc,GAAG,YAAY,CAAC,SAAS,GAAG,WAAW;AACzD,UAAI,QAAQ,YAAY,YAAY,SAAS;AAC7C,UAAI,UAAU,MAAM,IAAI,EAAE,KAAU,MAAa,CAAC;AAClD,cAAQ,YAAY,WAAY;AAAE,gBAAQ;AAAA,MAAG;AAC7C,cAAQ,UAAU,WAAY;AAAE,eAAO,QAAQ,KAAK;AAAA,MAAG;AAAA,IACzD,CAAC;AAAA,EACH;AAEA,iBAAsB,cAAc,KAAK;AACvC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI,cAAc,GAAG,YAAY,CAAC,SAAS,GAAG,WAAW;AACzD,UAAI,QAAQ,YAAY,YAAY,SAAS;AAC7C,UAAI,UAAU,MAAM,OAAO,GAAG;AAC9B,cAAQ,YAAY,WAAY;AAAE,gBAAQ;AAAA,MAAG;AAC7C,cAAQ,UAAU,WAAY;AAAE,eAAO,QAAQ,KAAK;AAAA,MAAG;AAAA,IACzD,CAAC;AAAA,EACH;;;ACrDO,MAAI,OAAO,CAAC;AACZ,MAAI,gBAAgB;AAK3B,WAAS,yBAAyBA,OAAM,WAAW;AAC/C,QAAI,YAAY;AAChB,IAAAA,MAAK,QAAQ,UAAQ;AACnB,mBAAa,KAAK,WAAW,KAAK;AAAA,IACpC,CAAC;AACD,QAAI,QAAQ,CAAC;AACb,QAAI,0BAA0B;AAC9B,cAAU,QAAQ,UAAQ;AACxB,UAAI,OAAO,KAAK,YAAY,KAAK,QAAQ;AACzC,UAAI,aAAa,aAAa,OAAO;AACrC,YAAM,KAAK;AAAA,QACT,aAAa,KAAK,eAAe,KAAK,gBAAgB;AAAA,QACtD,cAAc,KAAK;AAAA,QACnB,MAAM,KAAK;AAAA,QACX;AAAA,MACF,CAAC;AACD,iCAA2B;AAAA,IAC7B,CAAC;AACD,QAAI,cAAc,YAAY;AAC9B,WAAO,EAAE,WAAW,yBAAyB,aAAa,MAAM;AAAA,EACpE;AAKA,iBAAsB,sBAAsB;AAC1C,UAAM,YAAY,MAAM,WAAW,MAAM;AACzC,QAAI,WAAW;AACb,aAAO,KAAK,MAAM,SAAS;AAC3B,YAAM,WAAW;AAAA,IACnB;AAAA,EACF;AAKA,iBAAsB,UAAU,SAASC,oBAAmB;AAC1D,QAAI,CAACA,oBAAmB;AACtB,aAAO,SAAS,2DAA2D;AAC3E;AAAA,IACF;AACA,UAAM,eAAe,KAAK,KAAK,UAAQ,KAAK,SAAS,QAAQ,IAAI;AACjE,QAAI,cAAc;AAChB,mBAAa,YAAY;AAAA,IAC3B,OAAO;AACL,cAAQ,WAAW;AACnB,WAAK,KAAK,OAAO;AAAA,IACnB;AACA,UAAM,WAAW;AAAA,EACnB;AAKA,iBAAsB,aAAa;AAC/B,UAAM,YAAY,EAAE,aAAa;AACjC,cAAU,MAAM;AAChB,oBAAgB;AAChB,QAAI,WAAW;AACf,SAAK,QAAQ,UAAQ;AACnB,uBAAiB,KAAK;AACtB,kBAAY,KAAK,WAAW,KAAK;AACjC,YAAM,WAAW,eAAe,IAAI;AACpC,gBAAU,OAAO,QAAQ;AAAA,IAC3B,CAAC;AACD,MAAE,gBAAgB,EAAE,KAAK,aAAa;AACtC,MAAE,YAAY,EAAE,KAAK,SAAS,QAAQ,CAAC,CAAC;AACxC,MAAE,YAAY,EAAE,MAAM;AAEtB,MAAE,cAAc,EAAE,KAAK,SAAS,QAAQ,CAAC,CAAC;AAC1C,UAAM,WAAW,QAAQ,KAAK,UAAU,IAAI,CAAC;AAE7C,QAAI,UAAU,MAAM,WAAW,kBAAkB;AACjD,QAAI,uBAAuB,MAAM,WAAW,sBAAsB;AAClE,QAAI,qBAAqB,OAAO,qBAAqB;AAErD,QAAI,UAAU,UAAU,WAAW,wBAAwB,KAAK,SAAS,GAAG;AAC1E,aAAO,KAAK;AAAA,QACV,QAAQ;AAAA,QACR,MAAM;AAAA,UACJ,MAAM,KAAK,UAAU,IAAI;AAAA,UACzB;AAAA,UACA,UAAU;AAAA,UACV,mBAAmB;AAAA,QACrB;AAAA,QACA,UAAU,SAAS,GAAG;AACpB,cAAI,KAAK,EAAE,SAAS;AAClB,cAAE,YAAY,EAAE,KAAK,EAAE,QAAQ,UAAU,QAAQ,CAAC,CAAC;AACnD,cAAE,QAAQ,MAAM,QAAQ,cAAY;AAClC,gBAAE,YAAY,EAAE,OAAO,+BAA+B,SAAS,kCAA6B,SAAS,cAAc,GAAG,QAAQ,CAAC,gBAAgB;AAAA,YACjJ,CAAC;AACD,cAAE,cAAc,EAAE,KAAK,EAAE,QAAQ,YAAY,QAAQ,CAAC,CAAC;AAAA,UACzD;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,WAAW,CAAC,UAAU,UAAU,wBAAwB,KAAK,SAAS,GAAG;AACvE,UAAI,UAAU,CAAC;AACf,UAAI;AACF,kBAAU,KAAK,MAAM,oBAAoB;AAAA,MAC3C,SAAS,GAAP;AACA,kBAAU,EAAE,OAAO,CAAC,EAAE;AAAA,MACxB;AACA,UAAI,YAAY,QAAQ,SAAS,CAAC;AAClC,UAAI,YAAY,yBAAyB,MAAM,SAAS;AACxD,QAAE,YAAY,EAAE,KAAK,UAAU,UAAU,QAAQ,CAAC,CAAC;AACnD,gBAAU,MAAM,QAAQ,cAAY;AAClC,UAAE,YAAY,EAAE,OAAO,+BAA+B,SAAS,kCAA6B,SAAS,cAAc,GAAG,QAAQ,CAAC,gBAAgB;AAAA,MACjJ,CAAC;AACD,QAAE,cAAc,EAAE,KAAK,UAAU,YAAY,QAAQ,CAAC,CAAC;AAAA,IACzD;AAAA,EACJ;AAKA,WAAS,eAAe,MAAM;AAC5B,UAAM,WAAW,EAAE;AAAA;AAAA,kBAEH,KAAK,eAAe,KAAK;AAAA;AAAA,sCAEL,KAAK;AAAA;AAAA;AAAA,kBAGzB,KAAK;AAAA;AAAA;AAAA;AAAA,iDAIqB,KAAK,WAAW,KAAK,gBAAgB,QAAQ,CAAC;AAAA;AAAA;AAAA,GAGvF;AACD,aAAS,KAAK,oBAAoB,EAAE,GAAG,SAAS,iBAAkB;AAChE,WAAK,YAAY;AACjB,YAAM,WAAW;AAAA,IACnB,CAAC;AACD,aAAS,KAAK,oBAAoB,EAAE,GAAG,SAAS,iBAAkB;AAChE,UAAI,KAAK,WAAW,GAAG;AACrB,aAAK,YAAY;AACjB,cAAM,WAAW;AAAA,MACnB;AAAA,IACF,CAAC;AACD,aAAS,KAAK,cAAc,EAAE,GAAG,SAAS,iBAAkB;AAC1D,aAAO,KAAK,OAAO,CAAAC,cAAYA,UAAS,SAAS,KAAK,IAAI;AAC1D,YAAM,WAAW;AAAA,IACnB,CAAC;AACD,WAAO;AAAA,EACT;;;ACtJA,iBAAsB,gBAAgB;AACpC,UAAM,QAAQ;AACd,QAAI,WAAW,CAAC;AAChB,QAAI,QAAQ;AACZ,WAAO,MAAM;AACX,UAAI,WAAW,MAAM,OAAO,KAAK;AAAA,QAC/B,QAAQ;AAAA,QACR,MAAM;AAAA,UACJ,SAAS;AAAA,UACT,QAAQ,CAAC,QAAQ,aAAa,cAAc,SAAS,kBAAkB,UAAU;AAAA,UACjF,mBAAmB;AAAA,UACnB,aAAa;AAAA,QACf;AAAA,MACF,CAAC;AACD,UAAI,SAAS,WAAW,SAAS,QAAQ,SAAS,GAAG;AACnD,mBAAW,SAAS,OAAO,SAAS,OAAO;AAC3C,eAAO,SAAS,WAAW,SAAS,wBAAwB;AAC5D,YAAI,SAAS,QAAQ,SAAS;AAAO;AACrC,iBAAS;AAAA,MACX,OAAO;AACL;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAEA,iBAAsB,2BAA2B;AAC/C,QAAI;AACF,aAAO,SAAS,oCAAoC;AACpD,YAAM,QAAQ,MAAM,cAAc;AAClC,aAAO,SAAS,wBAAwB,MAAM,QAAQ;AACtD,YAAM,WAAW,SAAS,KAAK,UAAU,KAAK,CAAC;AAE/C,YAAM,WAAW,sBAAsB,IAAI,KAAK,EAAE,YAAY,CAAC;AAC/D,aAAO,SAAS,gCAAgC;AAAA,IAClD,SAAS,OAAP;AACA,cAAQ,MAAM,yBAAyB,KAAK;AAAA,IAC9C;AAGA,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,QAAQ,CAAC,QAAQ,mBAAmB,UAAU;AAAA,QAC9C,mBAAmB;AAAA,MACrB;AAAA,MACA,UAAU,eAAe,UAAU;AACjC,YAAI,SAAS,SAAS;AACpB,gBAAM,WAAW,eAAe,KAAK,UAAU,SAAS,OAAO,CAAC;AAChE,gBAAM,WAAW,4BAA4B,IAAI,KAAK,EAAE,YAAY,CAAC;AACrE,iBAAO,SAAS,uBAAuB,SAAS,QAAQ,QAAQ;AAAA,QAClE;AAAA,MACF;AAAA,IACF,CAAC;AAGD,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,QAAQ,CAAC,QAAQ,iBAAiB,aAAa,UAAU;AAAA,QACzD,mBAAmB;AAAA,MACrB;AAAA,MACA,UAAU,eAAe,UAAU;AACjC,YAAI,SAAS,SAAS;AACpB,gBAAM,WAAW,aAAa,KAAK,UAAU,SAAS,OAAO,CAAC;AAC9D,gBAAM,WAAW,0BAA0B,IAAI,KAAK,EAAE,YAAY,CAAC;AACnE,iBAAO,SAAS,qBAAqB,SAAS,QAAQ,QAAQ;AAAA,QAChE;AAAA,MACF;AAAA,IACF,CAAC;AAGD,mBAAe;AAAA,EAEjB;AAEA,iBAAsB,sBAAsB;AAC1C,QAAI,gBAAgB,MAAM,WAAW,OAAO;AAC5C,QAAI,aAAa,gBAAgB,KAAK,MAAM,aAAa,IAAI,CAAC;AAC9D,QAAI,cAAc,MAAM,WAAW,oBAAoB;AAEvD,QAAI,UAAU,cAAc,EAAE,UAAU,CAAC,KAAK,WAAW,EAAE,IAAI,CAAC;AAChE,QAAI,WAAW,MAAM,OAAO,KAAK;AAAA,MAC/B,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,QAAQ,CAAC,QAAQ,aAAa,cAAc,SAAS,kBAAkB,UAAU;AAAA,QACjF;AAAA,QACA,mBAAmB;AAAA,MACrB;AAAA,IACF,CAAC;AAED,QAAI,SAAS,WAAW,SAAS,QAAQ,SAAS,GAAG;AACnD,eAAS,QAAQ,QAAQ,aAAW;AAClC,YAAI,QAAQ,WAAW,UAAU,UAAQ,KAAK,SAAS,QAAQ,IAAI;AACnE,YAAI,QAAQ,IAAI;AACd,qBAAW,SAAS;AAAA,QACtB,OAAO;AACL,qBAAW,KAAK,OAAO;AAAA,QACzB;AAAA,MACF,CAAC;AACD,YAAM,WAAW,SAAS,KAAK,UAAU,UAAU,CAAC;AACpD,YAAM,WAAW,sBAAsB,IAAI,KAAK,EAAE,YAAY,CAAC;AAC/D,aAAO,SAAS,kBAAkB,SAAS,QAAQ,iBAAiB;AAAA,IACtE;AAAA,EACF;AAEA,iBAAsB,2BAA2B;AAC/C,QAAI,iBAAiB,MAAM,WAAW,aAAa;AACnD,QAAI,cAAc,iBAAiB,KAAK,MAAM,cAAc,IAAI,CAAC;AACjE,QAAI,cAAc,MAAM,WAAW,0BAA0B;AAE7D,QAAI,UAAU,cAAc,EAAE,UAAU,CAAC,KAAK,WAAW,EAAE,IAAI,CAAC;AAChE,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,QAAQ,CAAC,QAAQ,mBAAmB,UAAU;AAAA,QAC9C;AAAA,QACA,mBAAmB;AAAA,MACrB;AAAA,MACA,UAAU,eAAe,UAAU;AACjC,YAAI,SAAS,WAAW,SAAS,QAAQ,SAAS,GAAG;AACnD,mBAAS,QAAQ,QAAQ,cAAY;AACnC,gBAAI,QAAQ,YAAY,UAAU,WAAS,MAAM,SAAS,SAAS,IAAI;AACvE,gBAAI,QAAQ,IAAI;AACd,0BAAY,SAAS;AAAA,YACvB,OAAO;AACL,0BAAY,KAAK,QAAQ;AAAA,YAC3B;AAAA,UACF,CAAC;AACD,gBAAM,WAAW,eAAe,KAAK,UAAU,WAAW,CAAC;AAC3D,gBAAM,WAAW,4BAA4B,IAAI,KAAK,EAAE,YAAY,CAAC;AACrE,iBAAO,SAAS,wBAAwB,SAAS,QAAQ,iBAAiB;AAAA,QAC5E;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAEA,iBAAsB,0BAA0B;AAC9C,QAAI,oBAAoB,MAAM,WAAW,WAAW;AACpD,QAAI,iBAAiB,oBAAoB,KAAK,MAAM,iBAAiB,IAAI,CAAC;AAC1E,QAAI,cAAc,MAAM,WAAW,wBAAwB;AAE3D,QAAI,UAAU,cAAc,EAAE,UAAU,CAAC,KAAK,WAAW,EAAE,IAAI,CAAC;AAChE,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,SAAS;AAAA,QACT,QAAQ,CAAC,QAAQ,iBAAiB,aAAa,UAAU;AAAA,QACzD;AAAA,QACA,mBAAmB;AAAA,MACrB;AAAA,MACA,UAAU,eAAe,UAAU;AACjC,YAAI,SAAS,WAAW,SAAS,QAAQ,SAAS,GAAG;AACnD,mBAAS,QAAQ,QAAQ,iBAAe;AACtC,gBAAI,QAAQ,eAAe,UAAU,UAAQ,KAAK,SAAS,YAAY,IAAI;AAC3E,gBAAI,QAAQ,IAAI;AACd,6BAAe,SAAS;AAAA,YAC1B,OAAO;AACL,6BAAe,KAAK,WAAW;AAAA,YACjC;AAAA,UACF,CAAC;AACD,gBAAM,WAAW,aAAa,KAAK,UAAU,cAAc,CAAC;AAC5D,gBAAM,WAAW,0BAA0B,IAAI,KAAK,EAAE,YAAY,CAAC;AACnE,iBAAO,SAAS,sBAAsB,SAAS,QAAQ,iBAAiB;AAAA,QAC1E;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAEA,iBAAsB,iBAAiB;AACrC,QAAI,YAAY,MAAM,WAAW,uBAAuB;AACxD,QAAI,CAAC,WAAW;AAAE,kBAAY;AAAA,IAAkB;AAChD,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM,EAAE,UAAqB;AAAA,MAC7B,UAAU,eAAe,UAAU;AACjC,YAAI,SAAS,SAAS;AACpB,cAAI,gBAAgB,SAAS;AAC7B,gBAAM,WAAW,iBAAiB,KAAK,UAAU,aAAa,CAAC;AAC/D,gBAAM,WAAW,sBAAsB,IAAI,KAAK,EAAE,YAAY,CAAC;AAC/D,iBAAO,SAAS,0CAA0C;AAC1D,qBAAW;AAAA,QACb;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAEA,iBAAsB,kBAAkB;AAEtC,UAAM,eAAe;AAAA,EACvB;AAUA,WAAS,cAAc;AACrB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAM,UAAU,UAAU,KAAK,gBAAgB,CAAC;AAChD,cAAQ,kBAAkB,CAAC,UAAU;AACnC,cAAMC,MAAK,MAAM,OAAO;AACxB,YAAI,CAACA,IAAG,iBAAiB,SAAS,QAAQ,GAAG;AAC3C,UAAAA,IAAG,kBAAkB,UAAU,EAAE,SAAS,KAAK,CAAC;AAAA,QAClD;AAAA,MACF;AACA,cAAQ,YAAY,MAAM,QAAQ,QAAQ,MAAM;AAChD,cAAQ,UAAU,MAAM,OAAO,QAAQ,KAAK;AAAA,IAC9C,CAAC;AAAA,EACH;AAEA,iBAAsB,kBAAkB,QAAQ,UAAU;AACxD,QAAI;AAEF,YAAM,aAAa,mBAAmB,QAAQ;AAC9C,YAAM,WAAW,GAAG,OAAO,SAAS,yDAAyD;AAE7F,YAAM,WAAW,MAAM,MAAM,QAAQ;AACrC,YAAM,OAAO,MAAM,SAAS,KAAK;AACpC,cAAQ,IAAI,cAAc,KAAK,IAAI;AAChC,YAAMA,MAAK,MAAM,YAAY;AAC7B,YAAM,cAAcA,IAAG,YAAY,UAAU,WAAW;AACxD,YAAM,QAAQ,YAAY,YAAY,QAAQ;AAC9C,YAAM,IAAI,EAAE,IAAI,QAAQ,OAAO,KAAK,CAAC;AACrC,cAAQ,IAAI,6BAA6B,QAAQ;AAAA,IACnD,SAAS,OAAP;AACA,cAAQ,MAAM,oCAAoC,KAAK;AAEvD,YAAM;AAAA,IACR;AAAA,EACF;AAEA,iBAAsB,gBAAgB,QAAQ;AAC5C,WAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC5C,UAAI;AACF,cAAMA,MAAK,MAAM,YAAY;AAC7B,cAAM,cAAcA,IAAG,YAAY,UAAU,UAAU;AACvD,cAAM,QAAQ,YAAY,YAAY,QAAQ;AAC9C,cAAM,UAAU,MAAM,IAAI,MAAM;AAChC,gBAAQ,YAAY,MAAM;AACxB,cAAI,QAAQ,QAAQ;AAClB,oBAAQ,IAAI,gBAAgB,QAAQ,OAAO,KAAK,CAAC;AAAA,UACnD,OAAO;AACL,oBAAQ,IAAI;AAAA,UACd;AAAA,QACF;AACA,gBAAQ,UAAU,MAAM;AACtB,iBAAO,QAAQ,KAAK;AAAA,QACtB;AAAA,MACF,SAAS,OAAP;AACA,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AAAA,EACH;AAKA,iBAAsB,wBAAwB;AAC5C,QAAI,aAAa,QAAQ,oBAAoB,MAAM,QAAQ;AACzD,cAAQ,IAAI,gCAAgC;AAC5C;AAAA,IACF;AAEA,UAAM,WAAW,MAAM,WAAW,OAAO;AACzC,QAAI,CAAC,UAAU;AACb,cAAQ,KAAK,yCAAyC;AACtD;AAAA,IACF;AACA,UAAM,QAAQ,KAAK,MAAM,QAAQ;AACjC,UAAM,QAAQ,MAAM;AACpB,QAAI,QAAQ;AAEZ,MAAE,uBAAuB,EAAE,MAAM,MAAM;AACvC,MAAE,eAAe,EAAE,IAAI,SAAS,IAAI,EAAE,KAAK,iBAAiB,CAAC;AAE7D,UAAM,mBAAmB;AAEzB,aAAS,IAAI,GAAG,IAAI,OAAO,KAAK,kBAAkB;AAChD,YAAM,QAAQ,MAAM,MAAM,GAAG,IAAI,gBAAgB;AACjD,YAAM,QAAQ,IAAI,MAAM,IAAI,OAAO,SAAS;AAC1C,cAAM,kBAAkB,KAAK,MAAM,KAAK,KAAK;AAC7C;AACA,cAAM,WAAW,KAAK,MAAO,QAAQ,QAAS,GAAG;AACjD,UAAE,eAAe,EAAE,IAAI,SAAS,GAAG,WAAW,EAAE,KAAK,iBAAiB,QAAQ;AAAA,MAChF,CAAC,CAAC;AAAA,IACJ;AAEA,MAAE,uBAAuB,EAAE,MAAM,MAAM;AACvC,YAAQ,IAAI,2CAA2C;AACvD,iBAAa,QAAQ,sBAAsB,MAAM;AAAA,EACnD;AAOA,iBAAsB,oBAAoB,gBAAgB;AACxD,QAAI,kBAAkB,MAAM,WAAW,kBAAkB;AACzD,QAAI,iBAAiB;AACnB,UAAI;AACF,0BAAkB,KAAK,MAAM,eAAe;AAAA,MAC9C,SAAS,GAAP;AACA,0BAAkB,CAAC;AAAA,MACrB;AAAA,IACF,OAAO;AACL,wBAAkB,CAAC;AAAA,IACrB;AACA,oBAAgB,KAAK,cAAc;AACnC,UAAM,WAAW,oBAAoB,KAAK,UAAU,eAAe,CAAC;AAAA,EACtE;AAEA,iBAAsB,mBAAmBC,OAAM;AAC7C,QAAI,YAAY,MAAM,WAAW,eAAe;AAChD,QAAI,WAAW;AACb,UAAI;AACF,oBAAY,KAAK,MAAM,SAAS;AAAA,MAClC,SAAS,GAAP;AACA,oBAAY,CAAC;AAAA,MACf;AAAA,IACF,OAAO;AACL,kBAAY,CAAC;AAAA,IACf;AACA,IAAAA,MAAK,QAAQ,UAAQ;AACnB,UAAI,UAAU,KAAK,UAAU,QAAW;AACtC,kBAAU,KAAK,SAAS,KAAK;AAC7B,YAAI,UAAU,KAAK,QAAQ,GAAG;AAC5B,oBAAU,KAAK,QAAQ;AAAA,QACzB;AAAA,MACF;AAAA,IACF,CAAC;AACD,UAAM,WAAW,iBAAiB,KAAK,UAAU,SAAS,CAAC;AAC3D,eAAW;AAAA,EACb;AAEA,iBAAsB,sBAAsB;AAC1C,QAAI,CAAC,UAAU;AAAQ;AACvB,QAAI,kBAAkB,MAAM,WAAW,kBAAkB;AACzD,QAAI,CAAC;AAAiB;AACtB,QAAI;AACF,wBAAkB,KAAK,MAAM,eAAe;AAAA,IAC9C,SAAS,GAAP;AACA,cAAQ,MAAM,kCAAkC,CAAC;AACjD;AAAA,IACF;AACA,aAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,UAAI,iBAAiB,gBAAgB;AACrC,YAAM,OAAO,KAAK;AAAA,QAChB,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,UAAU,SAAU,kBAAkB;AACpC,cAAI,iBAAiB,WAAW,iBAAiB,QAAQ,YAAY;AACnE,mBAAO,SAAS,6BAA6B,iBAAiB,QAAQ,UAAU;AAChF,4BAAgB,OAAO,GAAG,CAAC;AAC3B;AAAA,UACF,OAAO;AACL,mBAAO,SAAS,yCAAyC,iBAAiB,SAAS,GAAG;AAAA,UACxF;AAAA,QACF;AAAA,QACA,OAAO,SAAU,KAAK;AACpB,iBAAO,SAAS,6CAA6C;AAC7D,kBAAQ,MAAM,cAAc,GAAG;AAAA,QACjC;AAAA,MACF,CAAC;AAAA,IACH;AACA,UAAM,WAAW,oBAAoB,KAAK,UAAU,eAAe,CAAC;AAAA,EACtE;;;ACtXA,MAAM,eAAe;AACrB,MAAI,uBAAuB,CAAC;AAC5B,MAAI,kBAAkB;AACtB,MAAI,cAAc;AAClB,MAAM,YAAY,IAAI,KAAK,aAAa,SAAS,EAAE,OAAO,YAAY,UAAU,MAAM,CAAC;AAEvF,iBAAsB,iBAAiB;AACrC,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM,EAAE,SAAS,cAAc,QAAQ,CAAC,QAAQ,iBAAiB,GAAG,mBAAmB,IAAK;AAAA,MAC5F,UAAU,SAAU,UAAU;AAC5B,cAAM,eAAe,EAAE,gBAAgB;AACvC,iBAAS,QAAQ,QAAQ,SAAO;AAC9B,gBAAM,cAAc,IAAI,mBAAmB,IAAI;AAC/C,uBAAa,OAAO,6EAA6E,gBAAgB,sBAAsB;AAAA,QACzI,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AAEA,iBAAsB,uBAAuB,eAAe;AAC1D,QAAI,OAAO,MAAM,WAAW,OAAO;AACnC,QAAI,CAAC,MAAM;AACT,aAAO,SAAS,gEAAgE;AAChF;AAAA,IACF;AACA,QAAI,WAAW,KAAK,MAAM,IAAI;AAC9B,2BAAuB,SAAS,OAAO,QAAM,GAAG,eAAe,aAAa;AAC5E,sBAAkB;AAClB,kBAAc;AACd,eAAW;AAAA,EACb;AAEA,iBAAe,WAAW,gBAAgB,sBAAsB;AAC9D,QAAI,SAAS,cAAc,KAAK;AAChC,QAAI,MAAM,QAAQ;AAClB,QAAI,YAAY,cAAc,MAAM,OAAO,GAAG;AAC9C,UAAM,oBAAoB,SAAS;AACnC,0BAAsB,KAAK,KAAK,cAAc,SAAS,YAAY,CAAC;AAAA,EACtE;AAEA,WAAS,sBAAsB,YAAY;AACzC,MAAE,sBAAsB,EAAE,OAAO;AACjC,QAAI,cAAc;AAAG;AACrB,UAAM,aAAa,EAAE,4EAA4E;AACjG,UAAM,cAAc,EAAE,gEAAgE;AACtF,UAAM,cAAc,EAAE,uDAAuD;AAC7E,QAAI,gBAAgB;AAAG,kBAAY,KAAK,YAAY,IAAI;AACxD,QAAI,gBAAgB;AAAY,kBAAY,KAAK,YAAY,IAAI;AACjE,gBAAY,GAAG,SAAS,WAAY;AAAE,UAAI,cAAc,GAAG;AAAE;AAAe,mBAAW;AAAA,MAAG;AAAA,IAAE,CAAC;AAC7F,gBAAY,GAAG,SAAS,WAAY;AAAE,UAAI,cAAc,YAAY;AAAE;AAAe,mBAAW;AAAA,MAAG;AAAA,IAAE,CAAC;AACtG,eAAW,OAAO,aAAa,WAAW;AAC1C,MAAE,YAAY,EAAE,KAAK,EAAE,OAAO,UAAU;AAAA,EAC1C;AAEA,iBAAe,oBAAoB,UAAU;AAC3C,MAAE,sBAAsB,EAAE,OAAO;AACjC,UAAM,eAAe,EAAE,eAAe;AACtC,iBAAa,MAAM;AACnB,QAAI,gBAAgB,CAAC;AACrB,QAAI;AACF,UAAI,gBAAgB,MAAM,WAAW,eAAe;AACpD,UAAI;AAAe,wBAAgB,KAAK,MAAM,aAAa;AAAA,IAC7D,SAAQ,GAAN;AACA,cAAQ,MAAM,mCAAmC,CAAC;AAAA,IACpD;AACA,aAAS,QAAQ,SAAU,SAAS;AAClC,YAAM,eAAe,kBAAkB,SAAS,aAAa;AAC7D,mBAAa,OAAO,YAAY;AAAA,IAClC,CAAC;AAAA,EACH;AAEA,WAAS,kBAAkB,SAAS,eAAe;AACjD,QAAI,YAAa,iBAAiB,cAAc,QAAQ,UAAU,SAC9D,cAAc,QAAQ,QACtB;AACJ,UAAM,eAAe,EAAE,uCAAuC;AAG9D,UAAM,gBAAgB,EAAE,4CAA4C,QAAQ,cAAc,QAAQ,eAAe;AAEjH,QAAI,CAAC,UAAU,QAAQ;AACvB,cAAQ,MAAM,oEAAoE,QAAQ,IAAI;AAC9F,oBAAc,GAAG,SAAS,SAAS,GAAG;AACpC,gBAAQ,MAAM,kEAAkE,QAAQ,MAAM,CAAC;AAC/F,gBAAQ,MAAM,0BAA0B,cAAc,KAAK,KAAK,CAAC;AAAA,MACnE,CAAC;AACD,oBAAc,GAAG,QAAQ,WAAW;AAClC,gBAAQ,IAAI,kDAAkD,QAAQ,IAAI;AAAA,MAC5E,CAAC;AAED,sBAAgB,QAAQ,IAAI,EACzB,KAAK,gBAAc;AAClB,YAAI,YAAY;AACd,kBAAQ,MAAM,mBAAmB,QAAQ,MAAM,KAAK,UAAU;AAC9D,wBAAc,KAAK,OAAO,UAAU;AAAA,QACtC,OAAO;AACL,kBAAQ,MAAM,uCAAuC,QAAQ,IAAI;AACjE,wBAAc,KAAK,OAAO,QAAQ,KAAK;AAAA,QACzC;AAAA,MACF,CAAC,EACA,MAAM,CAAC,UAAU;AAChB,gBAAQ,MAAM,iDAAiD,QAAQ,MAAM,KAAK;AAClF,sBAAc,KAAK,OAAO,QAAQ,KAAK;AAAA,MACzC,CAAC;AAAA,IACL,OAAO;AACL,oBAAc,KAAK,OAAO,QAAQ,KAAK;AACvC,wBAAkB,QAAQ,MAAM,QAAQ,KAAK,EAC1C,MAAM,WAAS,QAAQ,MAAM,8CAA8C,QAAQ,MAAM,KAAK,CAAC;AAAA,IACpG;AAEE,iBAAa,OAAO,aAAa;AAEjC,UAAM,cAAe,OAAO,cAAc,YAAY,YAAY,IAAK,eAAe;AACtF,UAAM,aAAe,OAAO,cAAc,YAAY,YAAY,IAAK,YAAY;AACnF,UAAM,cAAc,EAAE,sBAAsB,4BAA4B,mBAAmB;AAC3F,iBAAa,OAAO,WAAW;AAE/B,UAAM,eAAe,EAAE,4CAA4C;AACnE,UAAM,eAAe,EAAE,2CAA2C,EAAE,KAAK,QAAQ,SAAS;AAC1F,iBAAa,OAAO,YAAY;AAChC,UAAM,gBAAgB,EAAE,+BAA+B,EAAE,KAAK,UAAU,OAAO,QAAQ,cAAc,CAAC;AACtG,iBAAa,OAAO,aAAa;AACjC,iBAAa,OAAO,YAAY;AAGhC,iBAAa,GAAG,SAAS,WAAY;AACnC,QAAE,QAAQ,EAAE,QAAQ,wBAAwB,CAAC,OAAO,CAAC;AAAA,IACvD,CAAC;AACD,WAAO;AAAA,EACT;AAEO,WAAS,wBAAwB;AACtC,MAAE,QAAQ,EAAE,GAAG,SAAS,aAAa,SAAS,GAAG;AAC/C,QAAE,eAAe;AACjB,UAAI,WAAW,EAAE,IAAI,EAAE,KAAK,UAAU;AACtC,6BAAuB,QAAQ;AAAA,IACjC,CAAC;AAAA,EACH;AAEO,WAAS,sBAAsB;AACpC,MAAE,QAAQ,EAAE,GAAG,SAAS,yBAAyB,SAAU,GAAG;AAC5D,UAAI,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY;AAC5C,UAAI,CAAC,aAAa;AAChB,+BAAuB,eAAe;AAAA,MACxC,OAAO;AACL,uBAAe,WAAW;AAAA,MAC5B;AAAA,IACF,CAAC;AAAA,EACH;AAEA,WAAS,eAAe,aAAa;AACnC,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM,EAAE,aAAa,YAAY;AAAA,MACjC,UAAU,SAAS,UAAU;AAC3B,YAAI,SAAS,SAAS;AACpB,gBAAM,mBAAmB,SAAS;AAClC,qBAAW,gBAAgB;AAAA,QAC7B,OAAO;AACL,kBAAQ,MAAM,0CAA0C,WAAW;AAAA,QACrE;AAAA,MACF;AAAA,MACA,OAAO,SAAS,KAAK;AACnB,gBAAQ,MAAM,kCAAkC,GAAG;AAAA,MACrD;AAAA,IACF,CAAC;AAAA,EACH;;;ACxKA,MAAI;AACJ,MAAI;AAEG,WAAS,iBAAiB,WAAW,UAAU,WAAW,aAAa,UAAU;AAEtF,iBAAa;AACb,wBAAoB,YAAY;AAGhC,UAAM,eAAe;AAAA,MACnB;AAAA,MACA,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,iBAAa,QAAQ,sBAAsB,KAAK,UAAU,YAAY,CAAC;AAGvE,MAAE,sCAAsC,EAAE,KAAK,iBAAiB;AAChE,MAAE,mCAAmC,EAAE,KAAK,gCAAgC,WAAW;AAEvF,QAAI,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUhB,cAAU,QAAQ,UAAQ;AACxB,mBAAa;AAAA,YACL,KAAK;AAAA,sBACK,KAAK;AAAA,YACf,KAAK;AAAA,kBACJ,KAAK;AAAA;AAAA,IAEhB,CAAC;AACD,iBAAa;AACb,MAAE,sCAAsC,EAAE,KAAK,SAAS;AAGxD,MAAE,uCAAuC,EAAE,KAAK,oBAAe,WAAW,WAAW,EAAE,QAAQ,CAAC,QAAQ;AAGxG,QAAI,eAAe;AACnB,aAAS,QAAQ,aAAW;AAC1B,sBAAgB;AAAA,QACZ,QAAQ;AAAA,oBACD,WAAW,QAAQ,MAAM,EAAE,QAAQ,CAAC;AAAA;AAAA,IAEjD,CAAC;AACD,oBAAgB;AAChB,MAAE,yCAAyC,EAAE,KAAK,YAAY;AAG9D,MAAE,uBAAuB,EAAE,MAAM,MAAM;AAAA,EACzC;AAEO,WAAS,8BAA8B;AAC5C,UAAM,2BAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BjC,MAAE,MAAM,EAAE,OAAO,wBAAwB;AAGzC,MAAE,uBAAuB,EAAE,KAAK,oBAAoB,EAAE,GAAG,SAAS,WAAY;AAC5E,UAAI,CAAC,OAAO,YAAY;AACtB,eAAO,SAAS,mBAAmB;AACnC;AAAA,MACF;AACA,mBAAa;AAAA,IACf,CAAC;AAGD,MAAE,uBAAuB,EAAE,KAAK,oBAAoB,EAAE,GAAG,SAAS,WAAY;AAC5E,UAAI,CAAC,OAAO,YAAY;AACtB,eAAO,SAAS,mBAAmB;AACnC;AAAA,MACF;AACA,aAAO,KAAK;AAAA,QACV,QAAQ;AAAA,QACR,MAAM,EAAE,WAAuB;AAAA,QAC/B,UAAU,SAAU,UAAU;AAC5B,cAAI,SAAS,SAAS;AACpB,mBAAO,SAAS,+BAA+B;AAAA,UACjD,OAAO;AACL,mBAAO,SAAS,4CAA4C;AAAA,UAC9D;AAAA,QACF;AAAA,QACA,OAAO,SAAU,KAAK;AACpB,iBAAO,SAAS,+CAA+C;AAAA,QACjE;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAGD,MAAE,uBAAuB,EAAE,KAAK,gBAAgB,EAAE,GAAG,SAAS,WAAY;AACxE,QAAE,uBAAuB,EAAE,MAAM,MAAM;AACvC,0BAAoB;AAAA,IAEtB,CAAC;AAGD,MAAE,uBAAuB,EAAE,KAAK,sBAAsB,EAAE,GAAG,SAAS,WAAY;AAC9E,2BAAqB;AAAA,IACvB,CAAC;AAAA,EACH;AAEA,WAAS,uBAAuB;AAC9B,UAAM,mBAAmB,aAAa,QAAQ,oBAAoB;AAElE,QAAI,CAAC,kBAAkB;AACrB,aAAO,SAAS,kCAAkC;AAClD;AAAA,IACF;AAEA,UAAM,EAAE,WAAW,UAAU,WAAW,aAAa,SAAS,IAAI,KAAK,MAAM,gBAAgB;AAG7F,MAAE,sCAAsC,EAAE,KAAK,QAAQ;AACvD,MAAE,mCAAmC,EAAE,KAAK,gCAAgC,WAAW;AAEvF,QAAI,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWhB,cAAU,QAAQ,UAAQ;AACxB,mBAAa;AAAA,YACL,KAAK;AAAA,sBACK,KAAK;AAAA,YACf,KAAK;AAAA,kBACJ,KAAK;AAAA;AAAA,IAEhB,CAAC;AACD,iBAAa;AACb,MAAE,sCAAsC,EAAE,KAAK,SAAS;AAGxD,MAAE,uCAAuC,EAAE,KAAK,oBAAe,WAAW,WAAW,EAAE,QAAQ,CAAC,QAAQ;AAGxG,QAAI,eAAe;AACnB,aAAS,QAAQ,aAAW;AAC1B,sBAAgB;AAAA,QACZ,QAAQ;AAAA,oBACD,WAAW,QAAQ,MAAM,EAAE,QAAQ,CAAC;AAAA;AAAA,IAEjD,CAAC;AACD,oBAAgB;AAChB,MAAE,yCAAyC,EAAE,KAAK,YAAY;AAG9D,MAAE,uBAAuB,EAAE,MAAM,MAAM;AAAA,EACzC;AAEA,WAAS,eAAe;AAEtB,UAAM,UAAU;AAChB,UAAM,eAAe;AACrB,UAAM,cAAc;AACpB,UAAM,WAAW,OAAO,KAAK,QAAQ;AACrC,WAAO,MAAM,MAAM,SAAS,OAAO,YAAY,cAAc,aAAa,QAAQ;AAClF,YAAQ,MAAM,sCAAsC,OAAO,UAAU;AAAA,EACvE;;;ACtMO,WAAS,yBAAyB;AAEvC,UAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAeT,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAmBnB,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AActC,MAAE,MAAM,EAAE,OAAO,gBAAgB;AAGjC,QAAI,eAAe;AAGnB,MAAE,eAAe,EAAE,KAAK,uBAAuB,EAAE,GAAG,SAAS,WAAY;AACvE,qBAAe,EAAE,IAAI;AAAA,IACvB,CAAC;AAGD,MAAE,eAAe,EAAE,KAAK,uBAAuB,EAAE,GAAG,SAAS,WAAY;AACvE,0BAAoB;AAAA,IACtB,CAAC;AAGD,MAAE,eAAe,EAAE,KAAK,aAAa,EAAE,GAAG,SAAS,WAAY;AAC7D,YAAM,MAAM,EAAE,IAAI,EAAE,KAAK,OAAO;AAChC,UAAI,CAAC,gBAAgB,aAAa,WAAW,GAAG;AAE9C,uBAAe,EAAE,eAAe,EAAE,KAAK,cAAc;AAAA,MACvD;AACA,UAAI,QAAQ,KAAK;AACf,qBAAa,IAAI,EAAE;AAAA,MACrB,OAAO;AACL,qBAAa,IAAI,aAAa,IAAI,IAAI,GAAG;AAAA,MAC3C;AACA,0BAAoB;AAAA,IACtB,CAAC;AAGD,MAAE,eAAe,EAAE,KAAK,sBAAsB,EAAE,GAAG,SAAS,WAAY;AACtE,qBAAe;AAAA,IACjB,CAAC;AAGD,MAAE,eAAe,EAAE,KAAK,0BAA0B,EAAE,GAAG,SAAS,WAAY;AAC1E,QAAE,eAAe,EAAE,MAAM,MAAM;AAAA,IACjC,CAAC;AAAA,EACH;AAEA,WAAS,uBAAuB;AAE9B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcT;AAEA,WAAS,sBAAsB;AAE7B,UAAM,UAAU,CAAC,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAG;AAC5C,WAAO,QAAQ,IAAI,SAAO,gEAAgE,QAAQ,cAAc,EAAE,KAAK,EAAE;AAAA,EAC3H;AAEA,WAAS,sBAAsB;AAE7B,UAAM,aAAa,WAAW,EAAE,cAAc,EAAE,KAAK,EAAE,QAAQ,UAAK,EAAE,CAAC,KAAK;AAC5E,UAAM,UAAU,WAAW,EAAE,eAAe,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC,KAAK;AAC7E,UAAM,QAAQ,WAAW,EAAE,eAAe,EAAE,KAAK,qBAAqB,EAAE,IAAI,CAAC,KAAK;AAClF,UAAM,YAAY,WAAW,EAAE,eAAe,EAAE,KAAK,gBAAgB,EAAE,IAAI,CAAC,KAAK;AACjF,UAAM,aAAa,UAAU,QAAQ;AACrC,UAAM,WAAW,aAAa;AAC9B,MAAE,eAAe,EAAE,KAAK,sBAAsB,EAAE,KAAK,WAAM,WAAW,QAAQ,CAAC,CAAC;AAChF,MAAE,eAAe,EAAE,KAAK,qBAAqB,EAAE,KAAK,YAAO,WAAW,IAAI,IAAI,UAAU,QAAQ,CAAC,CAAC;AAAA,EACpG;AAEA,iBAAe,iBAAiB;AAC9B,UAAM,aAAa,WAAW,EAAE,cAAc,EAAE,KAAK,EAAE,QAAQ,UAAK,EAAE,CAAC,KAAK;AAC5E,UAAM,UAAU,WAAW,EAAE,eAAe,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC,KAAK;AAC7E,UAAM,QAAQ,WAAW,EAAE,eAAe,EAAE,KAAK,qBAAqB,EAAE,IAAI,CAAC,KAAK;AAClF,UAAM,YAAY,WAAW,EAAE,eAAe,EAAE,KAAK,gBAAgB,EAAE,IAAI,CAAC,KAAK;AACjF,UAAM,YAAY,UAAU,QAAQ;AAEpC,QAAI,YAAY,YAAY;AAC1B,aAAO,SAAS,uCAAuC;AACvD;AAAA,IACF;AAEA,QAAI,iBAAiB,CAAC;AACtB,QAAI,UAAU;AAAG,qBAAe,KAAK,EAAE,iBAAiB,QAAQ,QAAQ,QAAQ,CAAC;AACjF,QAAI,QAAQ;AAAG,qBAAe,KAAK,EAAE,iBAAiB,eAAe,QAAQ,MAAM,CAAC;AACpF,QAAI,YAAY;AAAG,qBAAe,KAAK,EAAE,iBAAiB,kBAAkB,QAAQ,UAAU,CAAC;AAE/F,QAAI,mBAAmB,MAAM,WAAW,kBAAkB;AAC1D,QAAI,uBAAuB,MAAM,WAAW,sBAAsB;AAClE,QAAI,CAAC,oBAAoB,CAAC,sBAAsB;AAC9C,aAAO,SAAS,oEAAoE;AACpF;AAAA,IACF;AAEA,QAAI,WAAW,MAAM,WAAW,sBAAsB,KAAK;AAC3D,QAAI,iBAAiB;AAAA,MACnB,MAAM,KAAK,UAAU,IAAI;AAAA,MACzB,UAAU,OAAO,qBAAqB;AAAA,MACtC,aAAa;AAAA,MACb,UAAU,KAAK,UAAU,cAAc;AAAA,MACvC,mBAAmB;AAAA,IACrB;AAGA,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO,SAAS,2EAA2E;AAC3F,YAAM,oBAAoB,cAAc;AACxC,YAAM,mBAAmB,IAAI;AAE7B,YAAM,mBAAmB,SAAS,IAAI,KAAK,EAAE,QAAQ;AACrD,qBAAe,UAAU;AAGzB,uBAAiB,kBAAkB,eAAe,UAAU,KAAK,MAAM,eAAe,IAAI,GAAG,YAAY,cAAc;AACvH,WAAK,SAAS;AACd,iBAAW;AACX,QAAE,eAAe,EAAE,MAAM,MAAM;AAC/B;AAAA,IACF;AAGA,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,UAAU,SAAU,kBAAkB;AACpC,YAAI,iBAAiB,WAAW,iBAAiB,QAAQ,YAAY;AACnE,gBAAM,eAAe,iBAAiB;AACtC,iBAAO,aAAa,aAAa;AAEjC,eAAK,QAAQ,SAAS,MAAK;AACzB,gBAAI,KAAK,QAAQ,KAAK,UAAU;AAC9B,qBAAO,KAAK;AAAA,gBACV,QAAQ;AAAA,gBACR,MAAM,EAAE,WAAW,KAAK,MAAM,UAAU,KAAK,SAAS;AAAA,gBACtD,UAAU,SAAS,KAAK;AACtB,0BAAQ,IAAI,qBAAqB,KAAK,IAAI;AAAA,gBAC5C;AAAA,cACF,CAAC;AAAA,YACH;AAAA,UACF,CAAC;AAED,cAAI,gBAAgB,KAAK,MAAM,eAAe,IAAI;AAClD,eAAK,SAAS;AACd,qBAAW;AACX,iBAAO,SAAS,+CAA+C,OAAO,UAAU;AAEhF,2BAAiB,OAAO,YAAY,eAAe,UAAU,eAAe,YAAY,cAAc;AAAA,QACxG,OAAO;AACL,iBAAO,SAAS,6CAA6C;AAAA,QAC/D;AACA,UAAE,eAAe,EAAE,MAAM,MAAM;AAAA,MACjC;AAAA,MACA,OAAO,eAAgB,KAAK;AAC1B,eAAO,SAAS,mDAAmD;AACnE,cAAM,oBAAoB,cAAc;AACxC,cAAM,mBAAmB,IAAI;AAC7B,aAAK,SAAS;AACd,mBAAW;AACX,UAAE,eAAe,EAAE,MAAM,MAAM;AAAA,MACjC;AAAA,IACF,CAAC;AAAA,EACH;;;AC7NO,WAAS,uBAAuB;AACrC,UAAM,sBAAsB,EAAE,sBAAsB;AACpD,wBAAoB,KAAK,wBAAwB,EAAE,GAAG,SAAS,iBAAkB;AAC/E,YAAM,cAAc,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY;AACrD,UAAI,UAAU,QAAQ;AACpB,YAAI;AACF,cAAI,WAAW,MAAM,OAAO,KAAK;AAAA,YAC/B,QAAQ;AAAA,YACR,MAAM,EAAE,YAAyB;AAAA,UACnC,CAAC;AACD,cAAI,SAAS,SAAS;AACpB,kBAAM,YAAY,SAAS;AAC3B,kBAAM,WAAW,aAAa,KAAK,UAAU,SAAS,CAAC;AACvD,iCAAqB,SAAS;AAC9B;AAAA,UACF;AAAA,QACF,SAAS,OAAP;AACA,kBAAQ,MAAM,kCAAkC,KAAK;AAAA,QACvD;AAAA,MACF;AACA,UAAI,kBAAkB,MAAM,WAAW,WAAW;AAClD,UAAI,WAAW,kBAAkB,KAAK,MAAM,eAAe,IAAI,CAAC;AAChE,UAAI,WAAW,SAAS,OAAO,UAAQ;AACrC,YAAI,eAAe,KAAK,gBAAgB,OAAO,KAAK,aAAa,KAAK,YAAY;AAClF,eAAO,YAAY,SAAS,WAAW;AAAA,MACzC,CAAC;AACD,UAAI,SAAS,SAAS,GAAG;AAAE,6BAAqB,QAAQ;AAAA,MAAG,OACtD;AAAE,eAAO,SAAS,0CAA0C;AAAA,MAAG;AAAA,IACtE,CAAC;AAED,MAAE,sBAAsB,EAAE,KAAK,mBAAmB,EAAE,GAAG,SAAS,WAAY;AAC1E,YAAM,gBAAgB,EAAE,sBAAsB,EAAE,KAAK,wBAAwB,EAAE,IAAI,EAAE,KAAK;AAC1F,UAAI,CAAC,eAAe;AAClB,eAAO,SAAS,+BAA+B;AAC/C;AAAA,MACF;AACA,aAAO,OAAO;AAAA,QACZ,EAAE,WAAW,aAAa,OAAO,aAAa,WAAW,QAAQ,MAAM,GAAG,aAAa,oCAAoC;AAAA,MAC7H,GAAG,eAAgB,QAAQ;AACzB,YAAI,UAAU,QAAQ;AACpB,cAAI;AACF,gBAAI,WAAW,MAAM,OAAO,KAAK;AAAA,cAC/B,QAAQ;AAAA,cACR,MAAM;AAAA,gBACJ,KAAK;AAAA,kBACH,SAAS;AAAA,kBACT;AAAA,kBACA,WAAW,OAAO;AAAA,kBAClB,eAAe;AAAA,kBACf,gBAAgB;AAAA,kBAChB,WAAW;AAAA,gBACb;AAAA,cACF;AAAA,YACF,CAAC;AACD,gBAAI,SAAS,SAAS;AACpB,qBAAO,SAAS,8BAA8B;AAC9C,qBAAO,oBAAoB,SAAS,QAAQ;AAAA,YAC9C;AAAA,UACF,SAAS,OAAP;AACA,mBAAO,SAAS,4BAA4B,KAAK;AACjD,oBAAQ,MAAM,0BAA0B,KAAK;AAAA,UAC/C;AAAA,QACF,OAAO;AACL,6BAAmB,eAAe,OAAO,SAAS;AAAA,QACpD;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAEA,WAAS,qBAAqB,WAAW;AACvC,UAAM,oBAAoB,EAAE,kDAAkD,EAAE,IAAI;AAAA,MAClF,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,SAAS;AAAA,MACT,cAAc;AAAA,MACd,cAAc;AAAA,MACd,WAAW;AAAA,MACX,cAAc;AAAA,MACd,cAAc;AAAA,IAChB,CAAC;AACD,MAAE,oBAAoB,EAAE,OAAO;AAC/B,cAAU,QAAQ,cAAY;AAC5B,YAAM,kBAAkB,EAAE;AAAA;AAAA,UAEpB,SAAS,kBAAkB,SAAS,aAAa;AAAA;AAAA,KAEtD,EAAE,GAAG,SAAS,WAAY;AACzB,eAAO,oBAAoB,SAAS;AACpC,UAAE,sBAAsB,EAAE,KAAK,wBAAwB,EAAE,IAAI,SAAS,aAAa;AACnF,0BAAkB,OAAO;AAAA,MAC3B,CAAC;AACD,wBAAkB,OAAO,eAAe;AAAA,IAC1C,CAAC;AACD,MAAE,sBAAsB,EAAE,OAAO,iBAAiB;AAAA,EACpD;AAEA,iBAAe,mBAAmB,eAAe,WAAW;AAC1D,QAAI;AACF,UAAI,gBAAgB,MAAM,WAAW,WAAW;AAChD,UAAI,aAAa,gBAAgB,KAAK,MAAM,aAAa,IAAI,CAAC;AAC9D,UAAI,cAAc;AAAA,QAChB,MAAM,WAAW,KAAK,IAAI;AAAA,QAC1B;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,MACV;AACA,iBAAW,KAAK,WAAW;AAC3B,YAAM,WAAW,aAAa,KAAK,UAAU,UAAU,CAAC;AACxD,aAAO,SAAS,sCAAsC;AACtD,aAAO,oBAAoB,YAAY;AACvC,QAAE,sBAAsB,EAAE,KAAK,wBAAwB,EAAE,IAAI,YAAY,aAAa;AAAA,IACxF,SAAS,OAAP;AACA,aAAO,SAAS,qCAAqC,KAAK;AAC1D,cAAQ,MAAM,mCAAmC,KAAK;AAAA,IACxD;AAAA,EACF;;;ACnHA,iBAAsB,yBAAyB;AAC7C,QAAI,gBAAgB,MAAM,WAAW,kBAAkB;AACvD,QAAI,oBAAoB,MAAM,WAAW,sBAAsB;AAC/D,QAAI,wBAAwB,MAAM,WAAW,iBAAiB;AAC9D,QAAI,iBAAiB,mBAAmB;AACtC,aAAO,SAAS,yBAAyB,mBAAmB,mBAAmB;AAC/E,aAAO,mBAAmB;AAC1B,aAAO,uBAAuB;AAC9B,UAAI;AAAuB,eAAO,0BAA0B,KAAK,MAAM,qBAAqB;AAC5F;AAAA,IACF;AACA,QAAI,SAAS,IAAI,OAAO,GAAG,OAAO;AAAA,MAChC,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,EAAE,OAAO,WAAW,WAAW,WAAW,WAAW,UAAU,SAAS,IAAI,MAAM,EAAE;AAAA,QACpF,EAAE,OAAO,eAAe,WAAW,eAAe,WAAW,QAAQ,SAAS,eAAe,MAAM,EAAE;AAAA,QACrG;AAAA,UACE,OAAO;AAAA,UAA2B,WAAW;AAAA,UAAmB,WAAW;AAAA,UAAS,MAAM;AAAA,UAC1F,QAAQ;AAAA,YACN,EAAE,OAAO,mBAAmB,WAAW,mBAAmB,WAAW,QAAQ,SAAS,mBAAmB,cAAc,GAAG,MAAM,EAAE;AAAA,YAClI,EAAE,OAAO,kBAAkB,WAAW,kBAAkB,WAAW,YAAY,cAAc,EAAE;AAAA,UACjG;AAAA,QACF;AAAA,MACF;AAAA,MACA,sBAAsB;AAAA,MACtB,gBAAgB,eAAe,QAAQ;AACrC,YAAI,CAAC,OAAO,WAAW,CAAC,OAAO,aAAa;AAC1C,iBAAO,SAAS,6CAA6C;AAC7D;AAAA,QACF;AACA,cAAM,WAAW,oBAAoB,OAAO,OAAO;AACnD,cAAM,WAAW,wBAAwB,OAAO,WAAW;AAC3D,cAAM,WAAW,mBAAmB,KAAK,UAAU,OAAO,eAAe,CAAC;AAC1E,eAAO,mBAAmB,OAAO;AACjC,eAAO,uBAAuB,OAAO;AACrC,eAAO,SAAS,aAAa,OAAO,aAAa,OAAO,aAAa;AACrE,YAAI,cAAc,OAAO,SAAS,UAAU,IAAI;AAChD,YAAI,YAAY,OAAO,SAAS,SAAS,OAAO,SAAS,UAAU,GAAG,CAAC,IAAI;AAC3E,eAAO,KAAK;AAAA,UACV,QAAQ;AAAA,UACR,MAAM;AAAA,YACJ,SAAS,OAAO;AAAA,YAChB,aAAa,OAAO;AAAA,YACpB,mBAAmB;AAAA,YACnB,iBAAiB;AAAA,YACjB,yBAAyB,KAAK,UAAU,OAAO,eAAe;AAAA,UAChE;AAAA,UACA,UAAU,eAAe,KAAK;AAC5B,gBAAI,IAAI,WAAW,IAAI,QAAQ,eAAe;AAC5C,qBAAO,SAAS,gCAAgC,IAAI,QAAQ,aAAa;AACzE,oBAAM,mBAAmB,IAAI,QAAQ,aAAa;AAElD,qBAAO,SAAS,6CAA6C;AAC7D,oBAAM,yBAAyB;AAC/B,qBAAO,SAAS,sBAAsB;AAAA,YACxC,OAAO;AACL,qBAAO,SAAS,0CAA0C,IAAI,SAAS,GAAG;AAAA,YAC5E;AAAA,UACF;AAAA,QACF,CAAC;AACD,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AACD,WAAO,KAAK;AAAA,MACV,QAAQ;AAAA,MACR,MAAM,EAAE,SAAS,WAAW,QAAQ,CAAC,MAAM,EAAE;AAAA,MAC7C,UAAU,SAAU,UAAU;AAC5B,YAAI,YAAY,SAAS;AACzB,YAAI,aAAa,UAAU,QAAQ;AACjC,cAAI,kBAAkB,UAAU,IAAI,aAAW,QAAQ,IAAI,EAAE,KAAK,IAAI;AACtE,iBAAO,gBAAgB,WAAW,WAAW,eAAe;AAAA,QAC9D,OAAO;AACL,iBAAO,SAAS,qBAAqB;AAAA,QACvC;AAAA,MACF;AAAA,IACF,CAAC;AACD,WAAO,YAAY,QAAQ,GAAG,WAAW,WAAY;AACnD,UAAI,mBAAmB,OAAO,UAAU,SAAS;AACjD,UAAI,kBAAkB;AACpB,eAAO,KAAK;AAAA,UACV,QAAQ;AAAA,UACR,MAAM,EAAE,SAAS,iBAAiB;AAAA,UAClC,UAAU,SAAU,UAAU;AAC5B,gBAAI,WAAW,SAAS;AACxB,gBAAI,UAAU;AACd,gBAAI,YAAY,SAAS,QAAQ;AAC/B,uBAAS,QAAQ,SAAU,SAAS;AAAE,2BAAW,QAAQ,OAAO;AAAA,cAAM,CAAC;AAAA,YACzE,OAAO;AACL,wBAAU;AAAA,YACZ;AACA,mBAAO,gBAAgB,eAAe,WAAW,OAAO;AAAA,UAC1D;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AACA,WAAO,YAAY,YAAY,GAAG,WAAW,WAAY;AACvD,UAAI,mBAAmB,OAAO,UAAU,aAAa;AACrD,UAAI,CAAC,oBAAoB,qBAAqB;AAAa;AAC3D,aAAO,KAAK;AAAA,QACV,QAAQ;AAAA,QACR,MAAM,EAAE,SAAS,eAAe,MAAM,iBAAiB;AAAA,QACvD,UAAU,SAAU,GAAG;AACrB,cAAI,CAAC,EAAE;AAAS;AAChB,cAAI,cAAc,EAAE;AACpB,cAAI,gBAAgB,YAAY;AAChC,cAAI,eAAe,YAAY;AAC/B,iBAAO,KAAK;AAAA,YACV,QAAQ;AAAA,YACR,MAAM,EAAE,cAA6B;AAAA,YACrC,UAAU,SAAS,QAAQ;AACzB,kBAAI,YAAY,OAAO,WAAW,CAAC;AACnC,kBAAI,UAAU;AAAA,gBACZ,mBAAmB;AAAA,gBACnB;AAAA,gBACA,OAAO;AAAA,cACT;AACA,yBAAW,wBAAwB,KAAK,UAAU,OAAO,CAAC;AAC1D,kBAAI,YAAY,YAAY;AAC5B,yBAAW,yBAAyB,SAAS;AAC7C,kBAAI,WAAW,YAAY,YAAY,CAAC;AACxC,kBAAI,OAAO,CAAC;AACZ,uBAAS,QAAQ,SAAU,SAAS;AAClC,qBAAK,KAAK,EAAE,iBAAiB,QAAQ,iBAAiB,gBAAgB,EAAE,CAAC;AAAA,cAC3E,CAAC;AACD,kBAAI,KAAK,WAAW,GAAG;AACrB,qBAAK,KAAK,EAAE,iBAAiB,QAAQ,gBAAgB,EAAE,CAAC;AACxD,qBAAK,KAAK,EAAE,iBAAiB,eAAe,gBAAgB,EAAE,CAAC;AAC/D,qBAAK,KAAK,EAAE,iBAAiB,kBAAkB,gBAAgB,EAAE,CAAC;AAAA,cACpE;AACA,qBAAO,UAAU,mBAAmB,IAAI;AACxC,qBAAO,QAAQ;AAAA,YACjB;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO,KAAK;AAAA,EACd;AAEA,iBAAe,mBAAmB,YAAY;AAC5C,QAAI,aAAa,MAAM,WAAW,qBAAqB;AACvD,QAAI,UAAU,CAAC;AACf,QAAI,YAAY;AACd,UAAI;AAAE,kBAAU,KAAK,MAAM,UAAU;AAAA,MAAG,SAAS,GAAP;AAAY,kBAAU,CAAC;AAAA,MAAG;AAAA,IACtE;AACA,YAAQ,KAAK,UAAU;AACvB,UAAM,WAAW,uBAAuB,KAAK,UAAU,OAAO,CAAC;AAAA,EACjE;AAEA,iBAAsB,qBAAqB;AACzC,YAAQ,MAAM,2BAA2B;AAEzC,QAAI,YAAY,MAAM,WAAW,MAAM;AACvC,YAAQ,MAAM,eAAe,SAAS;AACtC,QAAI,aAAa,KAAK,MAAM,SAAS,EAAE,SAAS,GAAG;AACjD,cAAQ,MAAM,0DAA0D;AAAA,IAC1E;AAEA,QAAI,aAAa,MAAM,WAAW,qBAAqB;AACvD,YAAQ,MAAM,qCAAqC,UAAU;AAC7D,QAAI,iBAAiB,aAAa,KAAK,MAAM,UAAU,IAAI,CAAC;AAE5D,QAAI,eAAe,WAAW,GAAG;AAC/B,aAAO,SAAS,8DAA8D;AAC9E,YAAM,uBAAuB;AAC7B;AAAA,IACF;AAEA,QAAI,YAAY,OAAO,SAAS,UAAU,IAAI;AAC9C,QAAI,eAAe,OAAO,SAAS,UAAU;AAC7C,QAAI,UAAU,IAAI,KAAK;AACvB,QAAI,eAAe,QAAQ,aAAa,EAAE,MAAM,GAAG,EAAE;AACrD,YAAQ,MAAM,mCAAmC,WAAW,iBAAiB,cAAc,iBAAiB,YAAY;AAExH,eAAW,qBAAqB,gBAAgB;AAC9C,cAAQ,MAAM,6CAA6C,iBAAiB;AAC5E,YAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACrC,eAAO,KAAK;AAAA,UACV,QAAQ;AAAA,UACR,MAAM;AAAA,YACJ;AAAA,YACA,iBAAiB;AAAA,YACjB;AAAA,YACA;AAAA,YACA,kBAAkB;AAAA,YAClB,wBAAwB;AAAA,YACxB,OAAO;AAAA,YACP,aAAa;AAAA,YACb,WAAW;AAAA,YACX,gBAAgB;AAAA,UAClB;AAAA,UACA,UAAU,SAAS,KAAK;AACtB,oBAAQ,MAAM,iCAAiC,mBAAmB,KAAK,GAAG;AAC1E,gBAAI,IAAI,WAAW,IAAI,QAAQ,eAAe;AAC5C,qBAAO,SAAS,mCAAmC,oBAAoB,OAAO,IAAI,QAAQ,aAAa;AAAA,YACzG,OAAO;AACL,qBAAO,SAAS,4CAA4C,oBAAoB,QAAQ,IAAI,SAAS,GAAG;AAAA,YAC1G;AACA,oBAAQ;AAAA,UACV;AAAA,UACA,OAAO,SAAS,KAAK;AACnB,mBAAO,SAAS,6CAA6C,GAAG;AAChE,mBAAO,GAAG;AAAA,UACZ;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,UAAM,uBAAuB;AAAA,EAC/B;AAEA,iBAAe,yBAAyB;AACtC,YAAQ,MAAM,6DAA6D;AAE3E,UAAM,QAAQ,IAAI;AAAA,MAChB,cAAc,kBAAkB;AAAA,MAChC,cAAc,sBAAsB;AAAA,MACpC,cAAc,iBAAiB;AAAA,MAC/B,cAAc,qBAAqB;AAAA,MACnC,cAAc,OAAO;AAAA,MACrB,cAAc,oBAAoB;AAAA,MAClC,cAAc,aAAa;AAAA,MAC3B,cAAc,0BAA0B;AAAA,MACxC,cAAc,WAAW;AAAA,MACzB,cAAc,wBAAwB;AAAA,MACtC,cAAc,eAAe;AAAA,MAC7B,cAAc,oBAAoB;AAAA,MAClC,cAAc,sBAAsB;AAAA,IACtC,CAAC;AAED,iBAAa,WAAW,oBAAoB;AAC5C,YAAQ,MAAM,mCAAmC;AACjD,WAAO,SAAS,uCAAuC;AACvD,WAAO,SAAS,OAAO;AAAA,EACzB;;;AC1NO,MAAM,aAAN,MAAiB;AAAA,IACvB,YAAY,SAAS;AACpB,WAAK,UAAU;AACf,WAAK,WAAW;AAAA,IACjB;AAAA,IAEA,MAAM,aAAa;AAElB,yBAAmB;AAGnB,WAAK,QAAQ,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoHzB,QAAE,QAAQ,EAAE,GAAG,SAAS,aAAa,CAAC,MAAM;AAC3C,UAAE,eAAe;AACjB,eAAO,SAAS,OAAO;AAAA,MACxB,CAAC;AAGD,QAAE,QAAQ,EAAE,GAAG,SAAS,cAAc,CAAC,MAAM;AAC5C,UAAE,eAAe;AACjB,gBAAQ,MAAM,uBAAuB;AAAA,MACtC,CAAC;AAGD,QAAE,QAAQ,EAAE,GAAG,SAAS,eAAe,OAAO,MAAM;AACnD,UAAE,eAAe;AACjB,cAAM,mBAAmB;AAAA,MAC1B,CAAC;AAGD,YAAM,QAAQ;AAGd,YAAM,uBAAuB;AAI7B,UAAI,MAAM,WAAW,OAAO,GAAG;AAC9B,cAAM,oBAAoB;AAC1B,cAAM,yBAAyB;AAC/B,cAAM,wBAAwB;AAC9B,cAAM,gBAAgB;AAAA,MAGvB,OAAO;AAEN,cAAM,yBAAyB;AAC/B,cAAM,gBAAgB;AAAA,MAEvB;AAGA,YAAM,oBAAoB;AAG1B,QAAE,QAAQ,EAAE,GAAG,SAAS,oBAAoB,iBAAkB;AAC5D,YAAI;AACL,gBAAM,sBAAsB;AAC5B,iBAAO,SAAS,2CAA2C;AAAA,QAC1D,SAAS,OAAP;AACH,iBAAO,SAAS,8BAA8B,KAAK;AAAA,QAClD;AAAA,MACF,CAAC;AAGD,QAAE,QAAQ,EAAE,GAAG,wBAAwB,eAAgB,GAAG,SAAS;AAClE,gBAAQ,MAAM,uDAAuD,OAAO;AAE5E,cAAM,UAAU,SAAS,OAAO,qBAAqB,kBAAkB;AAAA,MACxE,CAAC;AAGD,6BAAuB;AACvB,kCAA4B;AAC5B,2BAAqB;AAGrB,QAAE,eAAe,EAAE,GAAG,SAAS,WAAY;AAC1C,gBAAQ,IAAI,gBAAgB,EAAE,cAAc,EAAE,KAAK,CAAC;AACpD,UAAE,eAAe,EAAE,MAAM,MAAM;AAAA,MAChC,CAAC;AAGD,QAAE,QAAQ,EAAE,GAAG,qBAAqB,CAAC,GAAG,WAAW,UAAU,eAAe,aAAa,aAAa;AACrG,yBAAiB,WAAW,UAAU,eAAe,aAAa,QAAQ;AAAA,MAC3E,CAAC;AAGD,qBAAe;AACf,4BAAsB;AACtB,0BAAoB;AAGpB,aAAO,iBAAiB,UAAU,WAAW;AAC5C,eAAO,SAAS,kDAAkD;AAClE;AAAA,MACD,CAAC;AACD,kBAAY,MAAM;AACjB,YAAI,UAAU,QAAQ;AACrB;AAAA,QACD;AAAA,MACD,GAAG,GAAK;AAAA,IACT;AAAA,EACD;AAEA,SAAO,WAAW,OAAO,YAAY,CAAC;AACtC,SAAO,SAAS,aAAa;",
  "names": ["cart", "selected_customer", "cartItem", "db", "cart"]
}
