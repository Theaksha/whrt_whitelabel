// cartManagement.js
(function () {
	let cart = [];
	let totalQuantity = 0;

	// Add a product to the cart
	function addToCart(product) {
		// Check that a customer is selected (set by customerManagement.js)
		if (!window.selectedCustomer) {
			frappe.msgprint("Please select a customer before adding items to the cart.");
			return;
		}
		let existingItem = cart.find(item => item.name === product.name);
		if (existingItem) {
			existingItem.quantity += 1;
		} else {
			product.quantity = 1;
			cart.push(product);
		}
		updateCart();
	}

	// Update cart UI and totals
	function updateCart() {
		let cartSection = $('.cart-section');
		let cartItemsContainer = cartSection.find('.cart-items');
		cartItemsContainer.empty();
		totalQuantity = 0;
		let netTotal = 0;
		cart.forEach(item => {
			totalQuantity += item.quantity;
			netTotal += item.quantity * item.valuation_rate;
			let cartItem = createCartItem(item);
			cartItemsContainer.append(cartItem);
		});
		let gst = netTotal * 0.18;
		let grandTotal = netTotal + gst;
		cartSection.find('.cart-quantity').text(totalQuantity);
		cartSection.find('.net-total').text(netTotal.toFixed(2));
		cartSection.find('.gst').text(gst.toFixed(2));
		cartSection.find('.grand-total').text(grandTotal.toFixed(2));

		// Save the cart in local storage
		localStorage.setItem('cart', JSON.stringify(cart));
	}

	// Create HTML for a cart item row
	function createCartItem(item) {
		let cartItem = $(`
			<div style="display: flex; align-items: center; margin-bottom: 10px; border-bottom: 1px solid #ddd; padding-bottom: 10px;">
				<img src="${item.image}" alt="${item.name}" style="width: 50px; height: 50px; margin-right: 10px; object-fit: cover; border-radius: 5px;">
				<div style="flex: 1;">
					<div style="font-weight: bold;">${item.name}</div>
					<div style="font-size: 12px; color: #555;">
						Quantity: 
						<button class="decrease-quantity">-</button>
						${item.quantity}
						<button class="increase-quantity">+</button>
					</div>
				</div>
				<div style="font-weight: bold; color: #333;">₹${(item.quantity * item.valuation_rate).toFixed(2)}</div>
				<button class="remove-item" style="margin-left: 10px; color: red;">×</button>
			</div>
		`);

		// Increase quantity
		cartItem.find('.increase-quantity').on('click', function () {
			item.quantity += 1;
			updateCart();
		});
		// Decrease quantity
		cartItem.find('.decrease-quantity').on('click', function () {
			if (item.quantity > 1) {
				item.quantity -= 1;
				updateCart();
			}
		});
		// Remove item from cart
		cartItem.find('.remove-item').on('click', function () {
			cart = cart.filter(cartItem => cartItem.name !== item.name);
			updateCart();
		});
		return cartItem;
	}

	// Load any saved cart from local storage
	function loadCartFromLocalStorage() {
		let savedCart = localStorage.getItem('cart');
		if (savedCart) {
			cart = JSON.parse(savedCart);
			updateCart();
		}
	}
	loadCartFromLocalStorage();

	// Expose cart functions to the global namespace
	window.cartManager = {
		addToCart,
		updateCart,
		getCart: () => cart
	};
})();
