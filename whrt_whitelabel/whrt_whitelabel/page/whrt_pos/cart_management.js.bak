// cart_management.js
let cart = [];
let totalQuantity = 0;
let invoice_id = null;
let selected_customer = null;

function add_to_cart(product) {
    if (!selected_customer) {
        frappe.msgprint("Please select a customer before adding items to the cart.");
        return;
    }

    const existingItem = cart.find(item => item.name === product.name);
    if (existingItem) {
        existingItem.quantity += 1;
    } else {
        product.quantity = 1;
        cart.push(product);
    }
    update_cart();
}

function update_cart() {
    const cartItems = cart_section.find('.cart-items');
    cartItems.empty();

    totalQuantity = 0;
    let netTotal = 0;

    cart.forEach(item => {
        totalQuantity += item.quantity;
        netTotal += item.quantity * item.valuation_rate;

        const cartItem = createCartItem(item);
        cartItems.append(cartItem);
    });

    const gst = netTotal * 0.18;
    const grandTotal = netTotal + gst;

    cart_section.find('.cart-quantity').text(totalQuantity);
    cart_section.find('.net-total').text(netTotal.toFixed(2));
    cart_section.find('.gst').text(gst.toFixed(2));
    cart_section.find('.grand-total').text(grandTotal.toFixed(2));

    // Save cart to local storage
    localStorage.setItem('cart', JSON.stringify(cart));
}

function createCartItem(item) {
    const cartItem = $(`
        <div style="display: flex; align-items: center; margin-bottom: 10px; border-bottom: 1px solid #ddd; padding-bottom: 10px;">
            <img src="${item.image}" alt="${item.name}" style="width: 50px; height: 50px; margin-right: 10px; object-fit: cover; border-radius: 5px;">
            <div style="flex: 1;">
                <div style="font-weight: bold;">${item.name}</div>
                <div style="font-size: 12px; color: #555;">
                    Quantity: 
                    <button class="decrease-quantity">-</button>
                    ${item.quantity}
                    <button class="increase-quantity">+</button>
                </div>
            </div>
            <div style="font-weight: bold; color: #333;">₹${(item.quantity * item.valuation_rate).toFixed(2)}</div>
            <button class="remove-item" style="margin-left: 10px; color: red;">×</button>
        </div>
    `);

    // Add event listeners for quantity adjustment and removal
    cartItem.find('.increase-quantity').on('click', function () {
        item.quantity += 1;
        update_cart();
    });

    cartItem.find('.decrease-quantity').on('click', function () {
        if (item.quantity > 1) {
            item.quantity -= 1;
            update_cart();
        }
    });

    cartItem.find('.remove-item').on('click', function () {
        cart = cart.filter(cartItem => cartItem.name !== item.name);
        update_cart();
    });

    return cartItem;
}

function loadCartFromLocalStorage() {
    const savedCart = localStorage.getItem('cart');
    if (savedCart) {
        cart = JSON.parse(savedCart);
        update_cart();
    }
}

// Call the function to load cart from local storage
loadCartFromLocalStorage();